
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.19+36 (git sha1 30a4218f5, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `verilog_defines  -DNO_ICE40_DEFAULT_ASSIGNMENTS ; read_verilog -sv -I../rtl cpusys_goboard.sv goboard_7seg.sv ../rtl/ahb_decoder.sv ../rtl/ahb_lite.sv ../rtl/ahb_mux.sv ../rtl/ahb_ram.sv ../rtl/ahb_rom.sv ../rtl/ahb_timer.sv ../rtl/alu.sv ../rtl/arm.sv ../rtl/condcheck.sv ../rtl/condlogic.sv ../rtl/controller.sv ../rtl/datapath.sv ../rtl/decoder.sv ../rtl/extend.sv ../rtl/flop.sv ../rtl/flopenr.sv ../rtl/flopr.sv ../rtl/mainfsm.sv ../rtl/mux2.sv ../rtl/mux3.sv ../rtl/mux4.sv ../rtl/regfile.sv ../rtl/shifter.sv ../rtl/top.sv ; synth_ice40 -device u -json cpusys_goboard.json' --

1. Executing Verilog-2005 frontend: cpusys_goboard.sv
Parsing SystemVerilog input from `cpusys_goboard.sv' to AST representation.
Generating RTLIL representation for module `\cpusys_goboard'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: goboard_7seg.sv
Parsing SystemVerilog input from `goboard_7seg.sv' to AST representation.
Generating RTLIL representation for module `\goboard_7seg'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../rtl/ahb_decoder.sv
Parsing SystemVerilog input from `../rtl/ahb_decoder.sv' to AST representation.
Generating RTLIL representation for module `\ahb_decoder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../rtl/ahb_lite.sv
Parsing SystemVerilog input from `../rtl/ahb_lite.sv' to AST representation.
Generating RTLIL representation for module `\ahb_lite'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../rtl/ahb_mux.sv
Parsing SystemVerilog input from `../rtl/ahb_mux.sv' to AST representation.
Generating RTLIL representation for module `\ahb_mux'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../rtl/ahb_ram.sv
Parsing SystemVerilog input from `../rtl/ahb_ram.sv' to AST representation.
Generating RTLIL representation for module `\ahb_ram'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../rtl/ahb_rom.sv
Parsing SystemVerilog input from `../rtl/ahb_rom.sv' to AST representation.
Generating RTLIL representation for module `\ahb_rom'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../rtl/ahb_timer.sv
Parsing SystemVerilog input from `../rtl/ahb_timer.sv' to AST representation.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../rtl/alu.sv
Parsing SystemVerilog input from `../rtl/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../rtl/arm.sv
Parsing SystemVerilog input from `../rtl/arm.sv' to AST representation.
Generating RTLIL representation for module `\arm'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../rtl/condcheck.sv
Parsing SystemVerilog input from `../rtl/condcheck.sv' to AST representation.
Generating RTLIL representation for module `\condcheck'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../rtl/condlogic.sv
Parsing SystemVerilog input from `../rtl/condlogic.sv' to AST representation.
Generating RTLIL representation for module `\condlogic'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ../rtl/controller.sv
Parsing SystemVerilog input from `../rtl/controller.sv' to AST representation.
Generating RTLIL representation for module `\controller'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ../rtl/datapath.sv
Parsing SystemVerilog input from `../rtl/datapath.sv' to AST representation.
Generating RTLIL representation for module `\datapath'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ../rtl/decoder.sv
Parsing SystemVerilog input from `../rtl/decoder.sv' to AST representation.
Generating RTLIL representation for module `\decoder'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ../rtl/extend.sv
Parsing SystemVerilog input from `../rtl/extend.sv' to AST representation.
Generating RTLIL representation for module `\extend'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ../rtl/flop.sv
Parsing SystemVerilog input from `../rtl/flop.sv' to AST representation.
Generating RTLIL representation for module `\flop'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ../rtl/flopenr.sv
Parsing SystemVerilog input from `../rtl/flopenr.sv' to AST representation.
Generating RTLIL representation for module `\flopenr'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: ../rtl/flopr.sv
Parsing SystemVerilog input from `../rtl/flopr.sv' to AST representation.
Generating RTLIL representation for module `\flopr'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: ../rtl/mainfsm.sv
Parsing SystemVerilog input from `../rtl/mainfsm.sv' to AST representation.
Generating RTLIL representation for module `\mainfsm'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: ../rtl/mux2.sv
Parsing SystemVerilog input from `../rtl/mux2.sv' to AST representation.
Generating RTLIL representation for module `\mux2'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: ../rtl/mux3.sv
Parsing SystemVerilog input from `../rtl/mux3.sv' to AST representation.
Generating RTLIL representation for module `\mux3'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: ../rtl/mux4.sv
Parsing SystemVerilog input from `../rtl/mux4.sv' to AST representation.
Generating RTLIL representation for module `\mux4'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: ../rtl/regfile.sv
Parsing SystemVerilog input from `../rtl/regfile.sv' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: ../rtl/shifter.sv
Parsing SystemVerilog input from `../rtl/shifter.sv' to AST representation.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: ../rtl/top.sv
Parsing SystemVerilog input from `../rtl/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

27. Executing SYNTH_ICE40 pass.

27.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

27.2. Executing HIERARCHY pass (managing design hierarchy).

27.2.1. Finding top of design hierarchy..
root of   4 design levels: top                 
root of   0 design levels: shifter             
root of   0 design levels: regfile             
root of   0 design levels: mux4                
root of   0 design levels: mux3                
root of   0 design levels: mux2                
root of   0 design levels: mainfsm             
root of   0 design levels: flopr               
root of   0 design levels: flopenr             
root of   0 design levels: flop                
root of   0 design levels: extend              
root of   1 design levels: decoder             
root of   1 design levels: datapath            
root of   2 design levels: controller          
root of   1 design levels: condlogic           
root of   0 design levels: condcheck           
root of   3 design levels: arm                 
root of   0 design levels: alu                 
root of   0 design levels: ahb_rom             
root of   0 design levels: ahb_ram             
root of   0 design levels: ahb_mux             
root of   1 design levels: ahb_lite            
root of   0 design levels: ahb_decoder         
root of   0 design levels: goboard_7seg        
root of   5 design levels: cpusys_goboard      
Automatically selected cpusys_goboard as design top module.

27.2.2. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Used module:     \goboard_7seg
Used module:     \top
Used module:         \ahb_lite
Used module:             \ahb_ram
Used module:             \ahb_rom
Used module:             \ahb_mux
Used module:             \ahb_decoder
Used module:             \flop
Used module:         \arm
Used module:             \datapath
Used module:                 \mux3
Used module:                 \flopr
Used module:                 \mux2
Used module:                 \alu
Used module:                 \shifter
Used module:                 \extend
Used module:                 \regfile
Used module:                 \flopenr
Used module:             \controller
Used module:                 \condlogic
Used module:                     \condcheck
Used module:                 \decoder
Used module:                     \mainfsm
Parameter 1 (\WIDTH) = 1

27.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\flop'.
Parameter 1 (\WIDTH) = 1
Generating RTLIL representation for module `$paramod\flop\WIDTH=s32'00000000000000000000000000000001'.
Parameter 1 (\WIDTH) = 32

27.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\flop'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\flop\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32

27.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\mux3'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\mux3\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32

27.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\flopr'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32

27.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\mux3\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 4

27.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2'.
Parameter 1 (\WIDTH) = 4
Generating RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000000100'.
Parameter 1 (\WIDTH) = 4
Found cached RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000000100'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32

27.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\flopenr'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 1

27.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\flopr'.
Parameter 1 (\WIDTH) = 1
Generating RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001'.
Parameter 1 (\WIDTH) = 2

27.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\flopenr'.
Parameter 1 (\WIDTH) = 2
Generating RTLIL representation for module `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010'.
Parameter 1 (\WIDTH) = 2
Found cached RTLIL representation for module `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010'.

27.2.12. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Used module:     \goboard_7seg
Used module:     \top
Used module:         \ahb_lite
Used module:             \ahb_ram
Used module:             \ahb_rom
Used module:             \ahb_mux
Used module:             \ahb_decoder
Used module:             $paramod\flop\WIDTH=s32'00000000000000000000000000000001
Used module:             $paramod\flop\WIDTH=s32'00000000000000000000000000100000
Used module:         \arm
Used module:             \datapath
Used module:                 $paramod\mux3\WIDTH=s32'00000000000000000000000000100000
Used module:                 $paramod\flopr\WIDTH=s32'00000000000000000000000000100000
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000100000
Used module:                 \alu
Used module:                 \shifter
Used module:                 \extend
Used module:                 \regfile
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000000100
Used module:                 $paramod\flopenr\WIDTH=s32'00000000000000000000000000100000
Used module:             \controller
Used module:                 \condlogic
Used module:                     $paramod\flopr\WIDTH=s32'00000000000000000000000000000001
Used module:                     \condcheck
Used module:                     $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010
Used module:                 \decoder
Used module:                     \mainfsm

27.2.13. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Used module:     \goboard_7seg
Used module:     \top
Used module:         \ahb_lite
Used module:             \ahb_ram
Used module:             \ahb_rom
Used module:             \ahb_mux
Used module:             \ahb_decoder
Used module:             $paramod\flop\WIDTH=s32'00000000000000000000000000000001
Used module:             $paramod\flop\WIDTH=s32'00000000000000000000000000100000
Used module:         \arm
Used module:             \datapath
Used module:                 $paramod\mux3\WIDTH=s32'00000000000000000000000000100000
Used module:                 $paramod\flopr\WIDTH=s32'00000000000000000000000000100000
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000100000
Used module:                 \alu
Used module:                 \shifter
Used module:                 \extend
Used module:                 \regfile
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000000100
Used module:                 $paramod\flopenr\WIDTH=s32'00000000000000000000000000100000
Used module:             \controller
Used module:                 \condlogic
Used module:                     $paramod\flopr\WIDTH=s32'00000000000000000000000000000001
Used module:                     \condcheck
Used module:                     $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010
Used module:                 \decoder
Used module:                     \mainfsm
Removing unused module `\mux4'.
Removing unused module `\mux3'.
Removing unused module `\mux2'.
Removing unused module `\flopr'.
Removing unused module `\flopenr'.
Removing unused module `\flop'.
Removed 6 unused modules.
Mapping positional arguments of cell top.ahb_lite (ahb_lite).
Mapping positional arguments of cell top.arm (arm).
Mapping positional arguments of cell decoder.fsm (mainfsm).
Mapping positional arguments of cell datapath.resmux ($paramod\mux3\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.aluout ($paramod\flopr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.aluresultmux ($paramod\mux2\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.alu (alu).
Mapping positional arguments of cell datapath.sh (shifter).
Mapping positional arguments of cell datapath.srcbmux ($paramod\mux3\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.srcamux ($paramod\mux2\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.ext (extend).
Mapping positional arguments of cell datapath.wdreg ($paramod\flopr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.areg ($paramod\flopr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.rf (regfile).
Mapping positional arguments of cell datapath.ra2mux ($paramod\mux2\WIDTH=s32'00000000000000000000000000000100).
Mapping positional arguments of cell datapath.ra1mux ($paramod\mux2\WIDTH=s32'00000000000000000000000000000100).
Mapping positional arguments of cell datapath.datareg ($paramod\flopr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.irreg ($paramod\flopenr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.pcmux ($paramod\mux2\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.pcreg ($paramod\flopenr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell controller.cl (condlogic).
Mapping positional arguments of cell controller.dec (decoder).
Mapping positional arguments of cell condlogic.condreg ($paramod\flopr\WIDTH=s32'00000000000000000000000000000001).
Mapping positional arguments of cell condlogic.nowritereg ($paramod\flopr\WIDTH=s32'00000000000000000000000000000001).
Mapping positional arguments of cell condlogic.cc (condcheck).
Mapping positional arguments of cell condlogic.flagreg0 ($paramod\flopenr\WIDTH=s32'00000000000000000000000000000010).
Mapping positional arguments of cell condlogic.flagreg1 ($paramod\flopenr\WIDTH=s32'00000000000000000000000000000010).
Mapping positional arguments of cell arm.dp (datapath).
Mapping positional arguments of cell arm.c (controller).
Mapping positional arguments of cell ahb_lite.ahb_ram (ahb_ram).
Mapping positional arguments of cell ahb_lite.ahb_rom (ahb_rom).
Mapping positional arguments of cell ahb_lite.mux (ahb_mux).
Mapping positional arguments of cell ahb_lite.dec (ahb_decoder).
Mapping positional arguments of cell ahb_lite.writereg ($paramod\flop\WIDTH=s32'00000000000000000000000000000001).
Mapping positional arguments of cell ahb_lite.adrreg ($paramod\flop\WIDTH=s32'00000000000000000000000000100000).

27.3. Executing PROC pass (convert processes to netlists).

27.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ahb_rom.$proc$../rtl/ahb_rom.sv:0$38'.
Cleaned up 0 empty switches.

27.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$364 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$359 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$355 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$350 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$347 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$344 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$341 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$338 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$330 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$325 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$321 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$316 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$313 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$310 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$307 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$304 in module SB_DFFSR.
Removed 1 dead cases from process $proc$../rtl/shifter.sv:0$117 in module shifter.
Marked 1 switch rules as full_case in process $proc$../rtl/shifter.sv:0$117 in module shifter.
Marked 1 switch rules as full_case in process $proc$../rtl/regfile.sv:16$104 in module regfile.
Marked 1 switch rules as full_case in process $proc$../rtl/flopenr.sv:7$514 in module $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.
Marked 1 switch rules as full_case in process $proc$../rtl/flopr.sv:6$513 in module $paramod\flopr\WIDTH=s32'00000000000000000000000000000001.
Marked 1 switch rules as full_case in process $proc$../rtl/flopenr.sv:7$512 in module $paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../rtl/mainfsm.sv:0$97 in module mainfsm.
Marked 4 switch rules as full_case in process $proc$../rtl/mainfsm.sv:0$96 in module mainfsm.
Marked 1 switch rules as full_case in process $proc$../rtl/mainfsm.sv:18$95 in module mainfsm.
Marked 1 switch rules as full_case in process $proc$../rtl/flopr.sv:6$509 in module $paramod\flopr\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../rtl/extend.sv:0$91 in module extend.
Marked 2 switch rules as full_case in process $proc$../rtl/decoder.sv:0$81 in module decoder.
Marked 1 switch rules as full_case in process $proc$../rtl/condcheck.sv:0$58 in module condcheck.
Removed 1 dead cases from process $proc$../rtl/alu.sv:0$44 in module alu.
Marked 1 switch rules as full_case in process $proc$../rtl/alu.sv:0$44 in module alu.
Marked 1 switch rules as full_case in process $proc$../rtl/ahb_ram.sv:12$28 in module ahb_ram.
Marked 1 switch rules as full_case in process $proc$../rtl/ahb_mux.sv:0$25 in module ahb_mux.
Removed 1 dead cases from process $proc$goboard_7seg.sv:35$20 in module goboard_7seg.
Marked 1 switch rules as full_case in process $proc$goboard_7seg.sv:35$20 in module goboard_7seg.
Marked 2 switch rules as full_case in process $proc$cpusys_goboard.sv:72$5 in module cpusys_goboard.
Removed a total of 3 dead cases.

27.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 15 redundant assignments.
Promoted 44 assignments to connections.

27.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$367'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$363'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$358'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$354'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$349'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$346'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$343'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$340'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$337'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$335'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$333'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$329'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$324'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$320'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$315'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$312'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$309'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$306'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$303'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$301'.
  Set init value: \Q = 1'0

27.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$364'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$355'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$347'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$341'.
Found async reset \S in `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$330'.
Found async reset \R in `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$321'.
Found async reset \S in `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$313'.
Found async reset \R in `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$307'.
Found async reset \reset in `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:7$514'.
Found async reset \reset in `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flopr.sv:6$513'.
Found async reset \reset in `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopenr.sv:7$512'.
Found async reset \reset in `\mainfsm.$proc$../rtl/mainfsm.sv:18$95'.
Found async reset \reset in `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:6$509'.

27.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 3 switches.
<suppressed ~36 debug messages>

27.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\flop\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flop.sv:6$505'.
Creating decoders for process `$paramod\flop\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flop.sv:6$504'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$367'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$364'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$363'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$359'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$358'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$355'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$354'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$350'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$349'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$347'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$346'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$344'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$343'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$341'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$340'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$338'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$337'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$336'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$335'.
Creating decoders for process `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$334'.
Creating decoders for process `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$333'.
Creating decoders for process `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$330'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$329'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$325'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$324'.
Creating decoders for process `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$321'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$320'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$316'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$315'.
Creating decoders for process `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$313'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$312'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$310'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$309'.
Creating decoders for process `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$307'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$306'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$304'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$303'.
Creating decoders for process `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$302'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$301'.
Creating decoders for process `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$300'.
Creating decoders for process `\shifter.$proc$../rtl/shifter.sv:0$117'.
     1/1: $1\y[31:0]
Creating decoders for process `\regfile.$proc$../rtl/regfile.sv:16$104'.
     1/3: $1$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$110
     2/3: $1$memwr$\rf$../rtl/regfile.sv:17$103_DATA[31:0]$109
     3/3: $1$memwr$\rf$../rtl/regfile.sv:17$103_ADDR[3:0]$108
Creating decoders for process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:7$514'.
     1/1: $0\q[1:0]
Creating decoders for process `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flopr.sv:6$513'.
     1/1: $0\q[0:0]
Creating decoders for process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopenr.sv:7$512'.
     1/1: $0\q[31:0]
Creating decoders for process `\mainfsm.$proc$../rtl/mainfsm.sv:0$97'.
     1/1: $1\controls[11:0]
Creating decoders for process `\mainfsm.$proc$../rtl/mainfsm.sv:0$96'.
     1/4: $4\nextstate[3:0]
     2/4: $3\nextstate[3:0]
     3/4: $2\nextstate[3:0]
     4/4: $1\nextstate[3:0]
Creating decoders for process `\mainfsm.$proc$../rtl/mainfsm.sv:18$95'.
     1/1: $0\state[3:0]
Creating decoders for process `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:6$509'.
     1/1: $0\q[31:0]
Creating decoders for process `\extend.$proc$../rtl/extend.sv:0$91'.
     1/1: $1\ExtImm[31:0]
Creating decoders for process `\decoder.$proc$../rtl/decoder.sv:0$81'.
     1/6: $1\FlagW[1:0] [1]
     2/6: { $2\NoWrite[0:0] $2\Shift[0:0] $2\ALUControl[2:0] }
     3/6: $1\FlagW[1:0] [0]
     4/6: $1\NoWrite[0:0]
     5/6: $1\Shift[0:0]
     6/6: $1\ALUControl[2:0]
Creating decoders for process `\condcheck.$proc$../rtl/condcheck.sv:0$58'.
     1/1: $1\CondEx[0:0]
Creating decoders for process `\alu.$proc$../rtl/alu.sv:0$44'.
     1/1: $1\Result[31:0]
Creating decoders for process `\ahb_ram.$proc$../rtl/ahb_ram.sv:12$28'.
     1/3: $1$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$35
     2/3: $1$memwr$\ram$../rtl/ahb_ram.sv:13$26_DATA[31:0]$34
     3/3: $1$memwr$\ram$../rtl/ahb_ram.sv:13$26_ADDR[14:0]$33
Creating decoders for process `\ahb_mux.$proc$../rtl/ahb_mux.sv:0$25'.
     1/1: $0\HRDATA[31:0]
Creating decoders for process `\goboard_7seg.$proc$goboard_7seg.sv:35$20'.
     1/1: $0\segments[6:0]
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:123$8'.
     1/2: $0\high_seg[3:0]
     2/2: $0\low_seg[3:0]
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
     1/2: $0\slow_clk[19:0]
     2/2: $0\clk_en[0:0]
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:0$1'.

27.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\shifter.\y' from process `\shifter.$proc$../rtl/shifter.sv:0$117'.
No latch inferred for signal `\mainfsm.\controls' from process `\mainfsm.$proc$../rtl/mainfsm.sv:0$97'.
No latch inferred for signal `\mainfsm.\nextstate' from process `\mainfsm.$proc$../rtl/mainfsm.sv:0$96'.
No latch inferred for signal `\extend.\ExtImm' from process `\extend.$proc$../rtl/extend.sv:0$91'.
No latch inferred for signal `\decoder.\ALUControl' from process `\decoder.$proc$../rtl/decoder.sv:0$81'.
No latch inferred for signal `\decoder.\Shift' from process `\decoder.$proc$../rtl/decoder.sv:0$81'.
No latch inferred for signal `\decoder.\FlagW' from process `\decoder.$proc$../rtl/decoder.sv:0$81'.
No latch inferred for signal `\decoder.\NoWrite' from process `\decoder.$proc$../rtl/decoder.sv:0$81'.
No latch inferred for signal `\condcheck.\CondEx' from process `\condcheck.$proc$../rtl/condcheck.sv:0$58'.
No latch inferred for signal `\alu.\Result' from process `\alu.$proc$../rtl/alu.sv:0$44'.
No latch inferred for signal `\ahb_mux.\HRDATA' from process `\ahb_mux.$proc$../rtl/ahb_mux.sv:0$25'.
No latch inferred for signal `\cpusys_goboard.\clk' from process `\cpusys_goboard.$proc$cpusys_goboard.sv:0$1'.

27.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\flop\WIDTH=s32'00000000000000000000000000100000.\q' using process `$paramod\flop\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flop.sv:6$505'.
  created $dff cell `$procdff$706' with positive edge clock.
Creating register for signal `$paramod\flop\WIDTH=s32'00000000000000000000000000000001.\q' using process `$paramod\flop\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flop.sv:6$504'.
  created $dff cell `$procdff$707' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$364'.
  created $adff cell `$procdff$708' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$359'.
  created $dff cell `$procdff$709' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$355'.
  created $adff cell `$procdff$710' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$350'.
  created $dff cell `$procdff$711' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$347'.
  created $adff cell `$procdff$712' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$344'.
  created $dff cell `$procdff$713' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$341'.
  created $adff cell `$procdff$714' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$338'.
  created $dff cell `$procdff$715' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$336'.
  created $dff cell `$procdff$716' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$334'.
  created $dff cell `$procdff$717' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$330'.
  created $adff cell `$procdff$718' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$325'.
  created $dff cell `$procdff$719' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$321'.
  created $adff cell `$procdff$720' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$316'.
  created $dff cell `$procdff$721' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$313'.
  created $adff cell `$procdff$722' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$310'.
  created $dff cell `$procdff$723' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$307'.
  created $adff cell `$procdff$724' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$304'.
  created $dff cell `$procdff$725' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$302'.
  created $dff cell `$procdff$726' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$300'.
  created $dff cell `$procdff$727' with positive edge clock.
Creating register for signal `\regfile.$memwr$\rf$../rtl/regfile.sv:17$103_ADDR' using process `\regfile.$proc$../rtl/regfile.sv:16$104'.
  created $dff cell `$procdff$728' with positive edge clock.
Creating register for signal `\regfile.$memwr$\rf$../rtl/regfile.sv:17$103_DATA' using process `\regfile.$proc$../rtl/regfile.sv:16$104'.
  created $dff cell `$procdff$729' with positive edge clock.
Creating register for signal `\regfile.$memwr$\rf$../rtl/regfile.sv:17$103_EN' using process `\regfile.$proc$../rtl/regfile.sv:16$104'.
  created $dff cell `$procdff$730' with positive edge clock.
Creating register for signal `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.\q' using process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:7$514'.
  created $adff cell `$procdff$731' with positive edge clock and positive level reset.
Creating register for signal `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001.\q' using process `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flopr.sv:6$513'.
  created $adff cell `$procdff$732' with positive edge clock and positive level reset.
Creating register for signal `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.\q' using process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopenr.sv:7$512'.
  created $adff cell `$procdff$733' with positive edge clock and positive level reset.
Creating register for signal `\mainfsm.\state' using process `\mainfsm.$proc$../rtl/mainfsm.sv:18$95'.
  created $adff cell `$procdff$734' with positive edge clock and positive level reset.
Creating register for signal `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.\q' using process `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:6$509'.
  created $adff cell `$procdff$735' with positive edge clock and positive level reset.
Creating register for signal `\ahb_ram.$memwr$\ram$../rtl/ahb_ram.sv:13$26_ADDR' using process `\ahb_ram.$proc$../rtl/ahb_ram.sv:12$28'.
  created $dff cell `$procdff$736' with positive edge clock.
Creating register for signal `\ahb_ram.$memwr$\ram$../rtl/ahb_ram.sv:13$26_DATA' using process `\ahb_ram.$proc$../rtl/ahb_ram.sv:12$28'.
  created $dff cell `$procdff$737' with positive edge clock.
Creating register for signal `\ahb_ram.$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN' using process `\ahb_ram.$proc$../rtl/ahb_ram.sv:12$28'.
  created $dff cell `$procdff$738' with positive edge clock.
Creating register for signal `\goboard_7seg.\segments' using process `\goboard_7seg.$proc$goboard_7seg.sv:35$20'.
  created $dff cell `$procdff$739' with positive edge clock.
Creating register for signal `\cpusys_goboard.\low_seg' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:123$8'.
  created $dff cell `$procdff$740' with positive edge clock.
Creating register for signal `\cpusys_goboard.\high_seg' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:123$8'.
  created $dff cell `$procdff$741' with positive edge clock.
Creating register for signal `\cpusys_goboard.\clk_en' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
  created $dff cell `$procdff$742' with positive edge clock.
Creating register for signal `\cpusys_goboard.\slow_clk' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
  created $dff cell `$procdff$743' with positive edge clock.
Creating register for signal `\cpusys_goboard.\reset_ff0' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
  created $dff cell `$procdff$744' with positive edge clock.
Creating register for signal `\cpusys_goboard.\reset_ff1' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
  created $dff cell `$procdff$745' with positive edge clock.
Creating register for signal `\cpusys_goboard.\reset' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
  created $dff cell `$procdff$746' with positive edge clock.

27.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

27.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\flop\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flop.sv:6$505'.
Removing empty process `$paramod\flop\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flop.sv:6$504'.
Removing empty process `SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$367'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$364'.
Removing empty process `SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$364'.
Removing empty process `SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$363'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$359'.
Removing empty process `SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$359'.
Removing empty process `SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$358'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$355'.
Removing empty process `SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$355'.
Removing empty process `SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$354'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$350'.
Removing empty process `SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$350'.
Removing empty process `SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$349'.
Removing empty process `SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$347'.
Removing empty process `SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$346'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$344'.
Removing empty process `SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$344'.
Removing empty process `SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$343'.
Removing empty process `SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$341'.
Removing empty process `SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$340'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$338'.
Removing empty process `SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$338'.
Removing empty process `SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$337'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$336'.
Removing empty process `SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$336'.
Removing empty process `SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$335'.
Removing empty process `SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$334'.
Removing empty process `SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$333'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$330'.
Removing empty process `SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$330'.
Removing empty process `SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$329'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$325'.
Removing empty process `SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$325'.
Removing empty process `SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$324'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$321'.
Removing empty process `SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$321'.
Removing empty process `SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$320'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$316'.
Removing empty process `SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$316'.
Removing empty process `SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$315'.
Removing empty process `SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$313'.
Removing empty process `SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$312'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$310'.
Removing empty process `SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$310'.
Removing empty process `SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$309'.
Removing empty process `SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$307'.
Removing empty process `SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$306'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$304'.
Removing empty process `SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$304'.
Removing empty process `SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$303'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$302'.
Removing empty process `SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$302'.
Removing empty process `SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$301'.
Removing empty process `SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$300'.
Found and cleaned up 1 empty switch in `\shifter.$proc$../rtl/shifter.sv:0$117'.
Removing empty process `shifter.$proc$../rtl/shifter.sv:0$117'.
Found and cleaned up 1 empty switch in `\regfile.$proc$../rtl/regfile.sv:16$104'.
Removing empty process `regfile.$proc$../rtl/regfile.sv:16$104'.
Found and cleaned up 1 empty switch in `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:7$514'.
Removing empty process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:7$514'.
Removing empty process `$paramod\flopr\WIDTH=s32'00000000000000000000000000000001.$proc$../rtl/flopr.sv:6$513'.
Found and cleaned up 1 empty switch in `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopenr.sv:7$512'.
Removing empty process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopenr.sv:7$512'.
Found and cleaned up 1 empty switch in `\mainfsm.$proc$../rtl/mainfsm.sv:0$97'.
Removing empty process `mainfsm.$proc$../rtl/mainfsm.sv:0$97'.
Found and cleaned up 4 empty switches in `\mainfsm.$proc$../rtl/mainfsm.sv:0$96'.
Removing empty process `mainfsm.$proc$../rtl/mainfsm.sv:0$96'.
Removing empty process `mainfsm.$proc$../rtl/mainfsm.sv:18$95'.
Removing empty process `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:6$509'.
Found and cleaned up 1 empty switch in `\extend.$proc$../rtl/extend.sv:0$91'.
Removing empty process `extend.$proc$../rtl/extend.sv:0$91'.
Found and cleaned up 2 empty switches in `\decoder.$proc$../rtl/decoder.sv:0$81'.
Removing empty process `decoder.$proc$../rtl/decoder.sv:0$81'.
Found and cleaned up 1 empty switch in `\condcheck.$proc$../rtl/condcheck.sv:0$58'.
Removing empty process `condcheck.$proc$../rtl/condcheck.sv:0$58'.
Found and cleaned up 1 empty switch in `\alu.$proc$../rtl/alu.sv:0$44'.
Removing empty process `alu.$proc$../rtl/alu.sv:0$44'.
Found and cleaned up 1 empty switch in `\ahb_ram.$proc$../rtl/ahb_ram.sv:12$28'.
Removing empty process `ahb_ram.$proc$../rtl/ahb_ram.sv:12$28'.
Found and cleaned up 1 empty switch in `\ahb_mux.$proc$../rtl/ahb_mux.sv:0$25'.
Removing empty process `ahb_mux.$proc$../rtl/ahb_mux.sv:0$25'.
Found and cleaned up 1 empty switch in `\goboard_7seg.$proc$goboard_7seg.sv:35$20'.
Removing empty process `goboard_7seg.$proc$goboard_7seg.sv:35$20'.
Found and cleaned up 2 empty switches in `\cpusys_goboard.$proc$cpusys_goboard.sv:123$8'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:123$8'.
Found and cleaned up 2 empty switches in `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:0$1'.
Cleaned up 39 empty switches.

27.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux3\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module $paramod\flop\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\flop\WIDTH=s32'00000000000000000000000000000001.
Optimizing module top.
Optimizing module shifter.
<suppressed ~1 debug messages>
Optimizing module regfile.
Optimizing module $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.
Optimizing module $paramod\flopr\WIDTH=s32'00000000000000000000000000000001.
Optimizing module $paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.
Optimizing module mainfsm.
<suppressed ~3 debug messages>
Optimizing module $paramod\mux2\WIDTH=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\flopr\WIDTH=s32'00000000000000000000000000100000.
Optimizing module extend.
<suppressed ~1 debug messages>
Optimizing module decoder.
<suppressed ~1 debug messages>
Optimizing module datapath.
Optimizing module controller.
Optimizing module condlogic.
Optimizing module condcheck.
<suppressed ~1 debug messages>
Optimizing module arm.
Optimizing module alu.
<suppressed ~4 debug messages>
Optimizing module ahb_rom.
Optimizing module ahb_ram.
Optimizing module ahb_mux.
Optimizing module ahb_lite.
Optimizing module ahb_decoder.
<suppressed ~1 debug messages>
Optimizing module goboard_7seg.
Optimizing module cpusys_goboard.
<suppressed ~1 debug messages>

27.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\mux3\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\flop\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\flop\WIDTH=s32'00000000000000000000000000000001.
Deleting now unused module top.
Deleting now unused module shifter.
Deleting now unused module regfile.
Deleting now unused module $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.
Deleting now unused module $paramod\flopr\WIDTH=s32'00000000000000000000000000000001.
Deleting now unused module $paramod\flopenr\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module mainfsm.
Deleting now unused module $paramod\mux2\WIDTH=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\mux2\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\flopr\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module extend.
Deleting now unused module decoder.
Deleting now unused module datapath.
Deleting now unused module controller.
Deleting now unused module condlogic.
Deleting now unused module condcheck.
Deleting now unused module arm.
Deleting now unused module alu.
Deleting now unused module ahb_rom.
Deleting now unused module ahb_ram.
Deleting now unused module ahb_mux.
Deleting now unused module ahb_lite.
Deleting now unused module ahb_decoder.
Deleting now unused module goboard_7seg.
<suppressed ~38 debug messages>

27.5. Executing TRIBUF pass.

27.6. Executing DEMINOUT pass (demote inout ports to input or output).

27.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 6 unused cells and 148 unused wires.
<suppressed ~8 debug messages>

27.9. Executing CHECK pass (checking for obvious problems).
Checking module cpusys_goboard...
Found and reported 0 problems.

27.10. Executing OPT pass (performing simple optimizations).

27.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

27.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top.\arm.\c.\dec.\fsm.$procmux$595.
    dead port 2/2 on $mux $flatten\top.\arm.\c.\dec.\fsm.$procmux$608.
    dead port 2/2 on $mux $flatten\top.\arm.\c.\dec.\fsm.$procmux$610.
    dead port 2/2 on $mux $flatten\top.\arm.\c.\dec.\fsm.$procmux$622.
Removed 4 multiplexer ports.
<suppressed ~35 debug messages>

27.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $flatten\top.\ahb_lite.\ahb_ram.$procmux$678:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31
      New ports: A=1'0, B=1'1, Y=$flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0]
      New connections: $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [31:1] = { $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] $flatten\top.\ahb_lite.\ahb_ram.$0$memwr$\ram$../rtl/ahb_ram.sv:13$26_EN[31:0]$31 [0] }
    New ctrl vector for $pmux cell $flatten\top.\ahb_lite.\mux.$procmux$687: { \top.ahb_lite.ahb_rom.HSEL $flatten\top.\ahb_lite.\mux.$procmux$690_CMP }
    New ctrl vector for $pmux cell $flatten\top.\arm.\c.\dec.\fsm.$procmux$625: { $flatten\top.\arm.\c.\dec.\fsm.$procmux$631_CMP $flatten\top.\arm.\c.\dec.\fsm.$procmux$611_CMP $auto$opt_reduce.cc:134:opt_pmux$750 $flatten\top.\arm.\c.\dec.\fsm.$procmux$596_CMP $flatten\top.\arm.\c.\dec.\fsm.$procmux$626_CMP }
    Consolidated identical input bits for $mux cell $flatten\top.\arm.\dp.\rf.$procmux$577:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107
      New ports: A=1'0, B=1'1, Y=$flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0]
      New connections: $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [31:1] = { $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] $flatten\top.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:17$103_EN[31:0]$107 [0] }
  Optimizing cells in module \cpusys_goboard.
Performed a total of 4 changes.

27.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.10.6. Executing OPT_DFF pass (perform DFF optimizations).

27.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 4 unused cells and 26 unused wires.
<suppressed ~5 debug messages>

27.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.10.9. Rerunning OPT passes. (Maybe there is more to do..)

27.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

27.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.10.13. Executing OPT_DFF pass (perform DFF optimizations).

27.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.10.16. Finished OPT passes. (There is nothing left to do.)

27.11. Executing FSM pass (extract and optimize FSM).

27.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cpusys_goboard.top.arm.c.dec.fsm.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.

27.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

27.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

27.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

27.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

27.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

27.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

27.12. Executing OPT pass (performing simple optimizations).

27.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

27.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$743 ($dff) from module cpusys_goboard (D = $add$cpusys_goboard.sv:77$6_Y, Q = \slow_clk, rval = 20'00000000000000000000).
Adding SRST signal on $procdff$742 ($dff) from module cpusys_goboard (D = $procmux$701_Y, Q = \clk_en, rval = 1'0).
Adding EN signal on $procdff$741 ($dff) from module cpusys_goboard (D = \top.arm.dp.wdreg.q [7:4], Q = \high_seg).
Adding EN signal on $procdff$740 ($dff) from module cpusys_goboard (D = \top.arm.dp.wdreg.q [3:0], Q = \low_seg).
Adding EN signal on $flatten\top.\arm.\dp.\pcreg.$procdff$733 ($adff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.pcreg.q).
Adding EN signal on $flatten\top.\arm.\dp.\irreg.$procdff$733 ($adff) from module cpusys_goboard (D = \top.arm.dp.datareg.d, Q = \top.arm.dp.irreg.q).
Adding EN signal on $flatten\top.\arm.\c.\cl.\flagreg1.$procdff$731 ($adff) from module cpusys_goboard (D = { \top.arm.dp.alu.Result [31] \top.arm.dp.alu.zero }, Q = \top.arm.c.cl.flagreg1.q).
Adding EN signal on $flatten\top.\arm.\c.\cl.\flagreg0.$procdff$731 ($adff) from module cpusys_goboard (D = { \top.arm.dp.alu.carryout \top.arm.dp.alu.overflow }, Q = \top.arm.c.cl.flagreg0.q).

27.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

27.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.12.9. Rerunning OPT passes. (Maybe there is more to do..)

27.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

27.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.12.13. Executing OPT_DFF pass (perform DFF optimizations).

27.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.12.16. Finished OPT passes. (There is nothing left to do.)

27.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port cpusys_goboard.$flatten\hexout1.$auto$mem.cc:319:emit$526 ($flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524).
Removed top 28 address bits (of 32) from memory init port cpusys_goboard.$flatten\hexout2.$auto$mem.cc:319:emit$526 ($flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524).
Removed top 18 address bits (of 32) from memory init port cpusys_goboard.$flatten\top.\ahb_lite.\ahb_rom.$meminit$\rom$../rtl/ahb_rom.sv:0$37 (top.ahb_lite.ahb_rom.rom).
Removed top 28 address bits (of 32) from memory init port cpusys_goboard.$flatten\top.\arm.\c.\dec.$auto$mem.cc:319:emit$522 ($flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520).
Removed top 28 address bits (of 32) from memory init port cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$auto$mem.cc:319:emit$518 ($flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516).
Removed top 27 bits (of 32) from port B of cell cpusys_goboard.$eqx$cpusys_goboard.sv:124$9 ($eqx).
Removed top 14 bits (of 15) from port B of cell cpusys_goboard.$flatten\top.\ahb_lite.\dec.$eq$../rtl/ahb_decoder.sv:7$22 ($eq).
Removed top 3 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$671_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$670_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$669_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$668_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$667_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$666_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\cl.\cc.$procmux$665_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.$eq$../rtl/decoder.sv:64$83 ($eq).
Removed top 1 bits (of 2) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.$eq$../rtl/decoder.sv:78$90 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$629_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$628_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$626_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$611_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$606 ($mux).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$596_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$procmux$593 ($mux).
Removed top 26 bits (of 32) from port A of cell cpusys_goboard.$flatten\top.\arm.\dp.\sh.$sub$../rtl/shifter.sv:11$122 ($sub).
Removed top 25 bits (of 32) from port Y of cell cpusys_goboard.$flatten\top.\arm.\dp.\sh.$sub$../rtl/shifter.sv:11$122 ($sub).
Removed top 1 bits (of 2) from port B of cell cpusys_goboard.$flatten\top.\arm.\dp.\sh.$procmux$574_CMP0 ($eq).
Removed top 3 bits (of 4) from wire cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$3\nextstate[3:0].
Removed top 1 bits (of 4) from wire cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$4\nextstate[3:0].

27.14. Executing PEEPOPT pass (run peephole optimizers).

27.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

27.16. Executing SHARE pass (SAT-based resource sharing).
Found 9 cells in module cpusys_goboard that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\top.\arm.\dp.\sh.$sshr$../rtl/shifter.sv:10$120 ($sshr):
    Found 1 activation_patterns using ctrl signal { $flatten\top.\arm.\dp.\sh.$procmux$573_CMP \top.arm.c.dec.fsm.controls [2:1] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\arm.\dp.\sh.$shr$../rtl/shifter.sv:11$121 ($shr):
    Found 2 activation_patterns using ctrl signal { $flatten\top.\arm.\dp.\sh.$procmux$574_CMP $flatten\top.\arm.\dp.\sh.$procmux$572_CMP \top.arm.c.dec.fsm.controls [2:1] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\arm.\dp.\sh.$shl$../rtl/shifter.sv:8$118 ($shl):
    Found 1 activation_patterns using ctrl signal { $flatten\top.\arm.\dp.\sh.$procmux$575_CMP \top.arm.c.dec.fsm.controls [2:1] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\arm.\dp.\sh.$shl$../rtl/shifter.sv:11$123 ($shl):
    Found 1 activation_patterns using ctrl signal { $flatten\top.\arm.\dp.\sh.$procmux$572_CMP \top.arm.c.dec.fsm.controls [2:1] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:19$115 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:19$114_Y.
    Found 1 candidates: $flatten\top.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:18$112
    Analyzing resource sharing with $flatten\top.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:18$112 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$111_Y.
      Activation pattern for cell $flatten\top.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:19$115: $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:19$114_Y = 1'0
      Activation pattern for cell $flatten\top.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:18$112: $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$111_Y = 1'0
      Size of SAT problem: 0 cells, 117 variables, 287 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:19$114_Y $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$111_Y } = 2'00
  Analyzing resource sharing options for $flatten\top.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:18$112 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\top.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$111_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\arm.\c.\dec.$auto$mem.cc:273:emit$521 ($memrd_v2):
    Found 1 activation_patterns using ctrl signal \top.arm.c.dec.fsm.controls [0].
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\ahb_lite.\ahb_rom.$memrd$\rom$../rtl/ahb_rom.sv:43$36 ($memrd):
    Found 1 activation_patterns using ctrl signal \top.ahb_lite.ahb_rom.HSEL.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.\ahb_lite.\ahb_ram.$memrd$\ram$../rtl/ahb_ram.sv:10$27 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\top.\ahb_lite.\mux.$procmux$690_CMP.
    No candidates found.

27.17. Executing TECHMAP pass (map to technology primitives).

27.17.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

27.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

27.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cpusys_goboard:
  creating $macc model for $add$cpusys_goboard.sv:77$6 ($add).
  creating $macc model for $flatten\top.\arm.\dp.\alu.$add$../rtl/alu.sv:18$42 ($add).
  creating $macc model for $flatten\top.\arm.\dp.\alu.$add$../rtl/alu.sv:18$43 ($add).
  creating $macc model for $flatten\top.\arm.\dp.\sh.$sub$../rtl/shifter.sv:11$122 ($sub).
  merging $macc model for $flatten\top.\arm.\dp.\alu.$add$../rtl/alu.sv:18$42 into $flatten\top.\arm.\dp.\alu.$add$../rtl/alu.sv:18$43.
  creating $alu model for $macc $flatten\top.\arm.\dp.\alu.$add$../rtl/alu.sv:18$43.
  creating $alu model for $macc $flatten\top.\arm.\dp.\sh.$sub$../rtl/shifter.sv:11$122.
  creating $alu model for $macc $add$cpusys_goboard.sv:77$6.
  creating $alu cell for $add$cpusys_goboard.sv:77$6: $auto$alumacc.cc:485:replace_alu$762
  creating $alu cell for $flatten\top.\arm.\dp.\sh.$sub$../rtl/shifter.sv:11$122: $auto$alumacc.cc:485:replace_alu$765
  creating $alu cell for $flatten\top.\arm.\dp.\alu.$add$../rtl/alu.sv:18$43: $auto$alumacc.cc:485:replace_alu$768
  created 3 $alu and 0 $macc cells.

27.21. Executing OPT pass (performing simple optimizations).

27.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

27.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.21.6. Executing OPT_DFF pass (perform DFF optimizations).

27.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

27.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.21.9. Rerunning OPT passes. (Maybe there is more to do..)

27.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

27.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.21.13. Executing OPT_DFF pass (perform DFF optimizations).

27.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.21.16. Finished OPT passes. (There is nothing left to do.)

27.22. Executing MEMORY pass.

27.22.1. Executing OPT_MEM pass (optimize memories).
cpusys_goboard.top.ahb_lite.ahb_rom.rom: removing const-0 lane 8
cpusys_goboard.top.ahb_lite.ahb_rom.rom: removing const-0 lane 10
cpusys_goboard.top.ahb_lite.ahb_rom.rom: removing const-0 lane 11
cpusys_goboard.top.ahb_lite.ahb_rom.rom: removing const-0 lane 27
cpusys_goboard.top.ahb_lite.ahb_rom.rom: removing const-0 lane 28
cpusys_goboard.top.ahb_lite.ahb_rom.rom: removing const-1 lane 30
Performed a total of 1 transformations.

27.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

27.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing cpusys_goboard.top.ahb_lite.ahb_ram.ram write port 0.
  Analyzing cpusys_goboard.top.arm.dp.rf.rf write port 0.

27.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

27.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524'[0] in module `\cpusys_goboard': merging output FF to cell.
Checking read port `$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524'[0] in module `\cpusys_goboard': merging output FF to cell.
Checking read port `$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520'[0] in module `\cpusys_goboard': no output FF found.
Checking read port `$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516'[0] in module `\cpusys_goboard': no output FF found.
Checking read port `\top.ahb_lite.ahb_ram.ram'[0] in module `\cpusys_goboard': no output FF found.
Checking read port `\top.ahb_lite.ahb_rom.rom'[0] in module `\cpusys_goboard': no output FF found.
Checking read port `\top.arm.dp.rf.rf'[0] in module `\cpusys_goboard': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\top.arm.dp.rf.rf'[1] in module `\cpusys_goboard': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520'[0] in module `\cpusys_goboard': address FF has async set and/or reset, not supported.
Checking read port address `$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516'[0] in module `\cpusys_goboard': address FF has async set and/or reset, not supported.
Checking read port address `\top.ahb_lite.ahb_ram.ram'[0] in module `\cpusys_goboard': merged address FF to cell.
Checking read port address `\top.ahb_lite.ahb_rom.rom'[0] in module `\cpusys_goboard': no address FF found.
Checking read port address `\top.arm.dp.rf.rf'[0] in module `\cpusys_goboard': no address FF found.
Checking read port address `\top.arm.dp.rf.rf'[1] in module `\cpusys_goboard': no address FF found.

27.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 2 unused cells and 16 unused wires.
<suppressed ~3 debug messages>

27.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory cpusys_goboard.top.arm.dp.rf.rf by address:

27.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

27.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

27.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory cpusys_goboard.$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524
using FF mapping for memory cpusys_goboard.$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524
using FF mapping for memory cpusys_goboard.$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520
using FF mapping for memory cpusys_goboard.$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516
mapping memory cpusys_goboard.top.ahb_lite.ahb_ram.ram via $__ICE40_RAM4K_
using FF mapping for memory cpusys_goboard.top.ahb_lite.ahb_rom.rom
using FF mapping for memory cpusys_goboard.top.arm.dp.rf.rf
<suppressed ~171 debug messages>

27.25. Executing TECHMAP pass (map to technology primitives).

27.25.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

27.25.2. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

27.25.3. Continuing TECHMAP pass.
Using template $paramod$14f3ae77ff1994b59f02d085858f48b2e81447f9\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~281 debug messages>

27.26. Executing ICE40_BRAMINIT pass.

27.27. Executing OPT pass (performing simple optimizations).

27.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~1145 debug messages>

27.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$mem.cc:1134:emulate_transparency$800 ($dffe) from module cpusys_goboard.
Removing always-active EN on $auto$memory_libmap.cc:1504:generate_mux$812 ($dffe) from module cpusys_goboard.

27.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 2 unused cells and 3597 unused wires.
<suppressed ~3 debug messages>

27.27.5. Rerunning OPT passes. (Removed registers in this run.)

27.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.27.8. Executing OPT_DFF pass (perform DFF optimizations).

27.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.27.10. Finished fast OPT passes.

27.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524 in module \cpusys_goboard:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of cpusys_goboard.$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524: $$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524 in module \cpusys_goboard:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of cpusys_goboard.$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524: $$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520 in module \cpusys_goboard:
  created 16 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516 in module \cpusys_goboard:
  created 16 $dff cells and 0 static cells of width 12.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \top.ahb_lite.ahb_rom.rom in module \cpusys_goboard:
  created 16384 $dff cells and 0 static cells of width 26.
  read interface: 0 $dff and 16383 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \top.arm.dp.rf.rf in module \cpusys_goboard:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.

27.29. Executing OPT pass (performing simple optimizations).

27.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~16407 debug messages>

27.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

27.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][13][3]$26149:
      Old ports: A=26'11010100100110011000011001, B=26'11000110001111000000000101, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857
      New ports: A=2'10, B=2'01, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3:2]
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [25:4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [1:0] } = { 3'110 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] 2'01 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [2] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [2] 2'11 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [2] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] 4'0000 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] 2'01 }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][13][0]$26140:
      Old ports: A=26'11000010011110011000001111, B=26'11010010000110100000011110, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853
      New ports: A=2'01, B=2'10, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [25:5] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [3:1] } = { 3'110 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [4] 5'00100 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] 3'110 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] 7'0000111 }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][13][2]$26146:
      Old ports: A=26'00000100101000110000000101, B=26'11000110101010111000000110, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856
      New ports: A=2'01, B=2'10, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1:0]
      New connections: $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [25:2] = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 4'0001 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 5'01010 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 3'011 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 7'0000001 }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][13][4]$26152:
      Old ports: A=26'11001101000001001101100100, B=26'11101100010001001000101100, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859
      New ports: A=2'10, B=2'01, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [3] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [25:7] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [5:4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [2:0] } = { 2'11 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [3] 4'0110 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [3] 7'0001001 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [6] 6'010100 }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][13][1]$26143:
      Old ports: A=26'11001101000000101011000100, B=26'11001000101000000000000101, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854
      New ports: A=2'10, B=2'01, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [25:7] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [5:1] } = { 5'11001 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [0] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [0] 3'000 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] 5'00010 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][3][4]$1555:
      Old ports: A=12'000100000000, B=12'010000100010, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [1] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [11:9] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [7:2] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [0] } = { 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [1] 3'000 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [1] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][3][3]$1552:
      Old ports: A=12'000000000001, B=12'000000000011, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$b$1536
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$b$1536 [1]
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$b$1536 [11:2] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$b$1536 [0] } = 11'00000000001
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][3][2]$1549:
      Old ports: A=12'000100010000, B=12'001001000000, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [4] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [11:7] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [5] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [3:0] } = { 2'00 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [4] 6'000000 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][3][1]$1546:
      Old ports: A=12'000000000010, B=12'000001000000, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [1] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [11:7] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [5:2] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [0] } = 10'0000000000
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][3][0]$1543:
      Old ports: A=12'100010101100, B=12'000000101100, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532 [7]
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532 [11:8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532 [6:0] } = { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532 [7] 10'0000101100 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][6]$1516:
      Old ports: A=5'00011, B=5'01000, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [3] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [0] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [4] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [2:1] } = { 2'00 $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][5]$1513:
      Old ports: A=5'10001, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494
      New ports: A=2'01, B=2'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [1:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [4:2] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][4]$1510:
      Old ports: A=5'10010, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493
      New ports: A=2'10, B=2'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493 [1:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493 [4:2] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493 [1:0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][3]$1507:
      Old ports: A=5'00101, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491
      New ports: A=2'01, B=2'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491 [1:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491 [4:2] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491 [1:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][2]$1504:
      Old ports: A=5'00000, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490
      New ports: A=1'0, B=1'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [4:1] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][1]$1501:
      Old ports: A=5'00001, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488
      New ports: A=2'01, B=2'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [1:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [4:2] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][3][0]$1498:
      Old ports: A=5'00010, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487
      New ports: A=2'10, B=2'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [1:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [4:2] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][6]$1471:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451
      New ports: A=2'10, B=2'01, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451 [1:0]
      New connections: $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451 [6:2] = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451 [1:0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][5]$1468:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [3] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [2:0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][4]$1465:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1448
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1448 [2]
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1448 [6:3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1448 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][3]$1462:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [4:1] } = { 2'11 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][2]$1459:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [3] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [2:0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][1]$1456:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [2] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [6:5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][0]$1453:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1]
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [6:2] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1] 2'11 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][6]$1426:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406
      New ports: A=2'10, B=2'01, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406 [1:0]
      New connections: $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406 [6:2] = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406 [1:0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][5]$1423:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [3] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [2:0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][4]$1420:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1403
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1403 [2]
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1403 [6:3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1403 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][3]$1417:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [4:1] } = { 2'11 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][2]$1414:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [3] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [2:0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][1]$1411:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [2] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [6:5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][0]$1408:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1]
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [6:2] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1] 2'11 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][7]$1429:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1407
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1407 [3]
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1407 [6:4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1407 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][3][7]$1474:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1452
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1452 [3]
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1452 [6:4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1452 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $flatten\top.\arm.\c.\dec.\fsm.$procmux$593:
      Old ports: A=3'101, B=3'011, Y=$auto$wreduce.cc:455:run$760 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$760 [2:1]
      New connections: $auto$wreduce.cc:455:run$760 [0] = 1'1
    Consolidated identical input bits for $pmux cell $flatten\top.\arm.\dp.\ext.$procmux$633:
      Old ports: A={ 24'000000000000000000000000 \top.arm.dp.irreg.q [7:0] }, B={ 20'00000000000000000000 \top.arm.dp.irreg.q [11:0] \top.arm.dp.irreg.q [23] \top.arm.dp.irreg.q [23] \top.arm.dp.irreg.q [23] \top.arm.dp.irreg.q [23] \top.arm.dp.irreg.q [23] \top.arm.dp.irreg.q [23] \top.arm.dp.irreg.q [23:0] 2'00 }, Y=\top.arm.dp.srcbmux.d1
      New ports: A={ 18'000000000000000000 \top.arm.dp.irreg.q [7:0] }, B={ 14'00000000000000 \top.arm.dp.irreg.q [11:0] \top.arm.dp.irreg.q [23:0] 2'00 }, Y=\top.arm.dp.srcbmux.d1 [25:0]
      New connections: \top.arm.dp.srcbmux.d1 [31:26] = { \top.arm.dp.srcbmux.d1 [25] \top.arm.dp.srcbmux.d1 [25] \top.arm.dp.srcbmux.d1 [25] \top.arm.dp.srcbmux.d1 [25] \top.arm.dp.srcbmux.d1 [25] \top.arm.dp.srcbmux.d1 [25] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$13852:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853, B=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709
      New ports: A={ 2'00 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [4] 1'1 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$a$13853 [0] }, B={ 1'1 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [6] 2'00 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][0]$b$13854 [0] }, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [21] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [17] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [11:9] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [25:22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [20:18] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [16:12] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [8:7] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [5] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [3:2] } = { 3'110 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [10] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] 2'00 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$13855:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856, B=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 3'011 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1] 2'01 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$a$13856 [1:0] }, B={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [2] 2'11 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [2] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][1]$b$13857 [3:2] 2'01 }, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [14:9] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [3:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [25:20] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [18:15] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [8:4] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [13] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [13] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [3] 3'010 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [10] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [2] 4'0000 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [3] }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$13858:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][12][2]$a$13859 [3] 2'10 }, B=4'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [3:2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [25:7] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [5:4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [1] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$1537:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538, B=12'x, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][2]$a$1538 [1] 1'0 }, B=3'x, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [1:0] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [11:9] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [7:2] } = { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [1:0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [1:0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$1534:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535, B=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$b$1536, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$a$1535 [4] 2'00 }, B={ 2'00 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][1]$b$1536 [1] 1'1 }, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [4] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [1:0] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [11:7] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [5] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [3:2] } = { 2'00 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [4] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$1531:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532, B=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$a$1532 [7] 3'010 }, B={ 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [6] 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][2][0]$b$1533 [1] }, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [7:6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [2:1] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [11:8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [5:3] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [0] } = { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [7] 3'000 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [2] 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$1495:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496, B=5'x, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [3] 1'0 $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][3]$a$1496 [0] }, B=3'x, Y={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485 [3:2] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485 [0] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485 [4] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485 [1] } = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485 [2] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$b$1485 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$1492:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493, B=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$a$1484
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493 [1:0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$a$1493 [1:0] }, B={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][2]$b$1494 [1:0] }, Y={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$a$1484 [4] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$a$1484 [2:0] }
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$a$1484 [3] = $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][1]$a$1484 [2]
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$1489:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490, B=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$a$1490 [0] }, B=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][1]$b$1491 [1:0], Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482 [1:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482 [4:2] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482 [1:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$1486:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487, B=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$a$1487 [1:0] }, B={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [1] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][2][0]$b$1488 [1:0] }, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481 [2:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481 [4:3] = { $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481 [2] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481 [2] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$1450:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1452, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440
      New ports: A={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451 [0] 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1451 [1:0] }, B={ 1'0 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1452 [3] 2'11 }, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440 [4:3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440 [1:0] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440 [6:5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440 [2] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1440 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$1447:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1448, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439
      New ports: A={ 2'11 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1448 [2] }, B={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1449 [3] 1'1 }, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439 [3:2] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439 [1:0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1439 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$1444:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437
      New ports: A={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1445 [3] 2'01 }, B={ 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1446 [0] }, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437 [6:5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437 [3:2] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437 [0] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437 [1] } = { 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1437 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$1441:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1436
      New ports: A={ 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1442 [1] 1'0 }, B={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [4] 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1443 [2] 2'01 }, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1436 [4:0]
      New connections: $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1436 [6:5] = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1436 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$1405:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1407, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395
      New ports: A={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406 [0] 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$a$1406 [1:0] }, B={ 1'0 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][3]$b$1407 [3] 2'11 }, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395 [4:3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395 [1:0] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395 [6:5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395 [2] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$b$1395 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$1402:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1403, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394
      New ports: A={ 2'11 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$a$1403 [2] }, B={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][2]$b$1404 [3] 1'1 }, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394 [3:2] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394 [1:0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][1]$a$1394 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$1399:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392
      New ports: A={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$a$1400 [3] 2'01 }, B={ 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][1]$b$1401 [0] }, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392 [6:5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392 [3:2] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392 [0] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392 [1] } = { 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$b$1392 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$1396:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1391
      New ports: A={ 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$a$1397 [1] 1'0 }, B={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [4] 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][2][0]$b$1398 [2] 2'01 }, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1391 [4:0]
      New connections: $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1391 [6:5] = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$524$rdmux[0][1][0]$a$1391 [3] 1'1 }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$7711:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [3:2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][1]$a$7712 [0] }, B=4'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [3:2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [25:7] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [5:4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [1] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] }
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$7708:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709, B=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637
      New ports: A={ 1'1 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [21] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [17] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [10] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [11:9] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1] 1'1 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$a$7709 [1:0] }, B={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [13] 2'01 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [10] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [14:9] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][11][0]$b$7710 [3:0] }, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [17:9] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [4:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [23:22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [18] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [8:7] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [5] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [24] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [6] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$1528:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529, B=12'x, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][1]$a$1529 [1:0] }, B=3'x, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [1:0] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [11:9] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [7:2] } = { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [1:0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [1:0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$1525:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526, B=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527, Y=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523
      New ports: A={ 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [7:6] 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$a$1526 [2:1] 1'0 }, B={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [6] 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [4] 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][1][0]$b$1527 [1:0] }, Y={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [9] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [7:6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [4] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [2:0] }
      New connections: { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [11:10] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [5] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [3] } = { $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [7] 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [4] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [2] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [2] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$1480:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481, B=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][0][0]$a$1478
      New ports: A={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481 [2] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$a$1481 [2:0] }, B={ $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482 [1:0] $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][1][0]$b$1482 [1:0] }, Y=$memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][0][0]$a$1478 [3:0]
      New connections: $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][0][0]$a$1478 [4] = $memory$flatten\top.\arm.\c.\dec.$auto$proc_rom.cc:150:do_switch$520$rdmux[0][0][0]$a$1478 [3]
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$4636:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637, B=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [24] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [17:9] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [6] 1'0 $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$a$4637 [4:0] }, B={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [3:2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [3] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [6] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [3:2] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][10][0]$b$4638 [0] }, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [6] }
    Consolidated identical input bits for $mux cell $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$1522:
      Old ports: A=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523, B=$memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524, Y=\top.arm.c.dec.fsm.controls
      New ports: A={ 1'0 $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [9] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [4] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [7:6] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [2] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [4] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$a$1523 [2:0] }, B={ $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [1:0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [8] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [1:0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [0] $memory$flatten\top.\arm.\c.\dec.\fsm.$auto$proc_rom.cc:150:do_switch$516$rdmux[0][0][0]$b$1524 [1:0] }, Y={ \top.arm.c.dec.fsm.controls [10:4] \top.arm.c.dec.fsm.controls [2:0] }
      New connections: { \top.arm.c.dec.fsm.controls [11] \top.arm.c.dec.fsm.controls [3] } = { \top.arm.c.dec.fsm.controls [7] \top.arm.c.dec.fsm.controls [2] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$3100:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][9][0]$a$3101 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$2332:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][8][0]$a$2333 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$1948:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][7][0]$a$1949 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$1756:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][6][0]$a$1757 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$1660:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][5][0]$a$1661 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$1612:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][4][0]$a$1613 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$1588:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][3][0]$a$1589 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$1576:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][2][0]$a$1577 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$1570:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571, B=26'x, Y=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][1][0]$a$1571 [17:0] }, B=23'x, Y={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [17:0] }
      New connections: { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [25] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [22] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [18] } = { $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [24] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [4] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [6] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$1567:
      Old ports: A=$memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568, B=26'x, Y={ \top.ahb_lite.mux.HRDATA0 [31] \top.ahb_lite.mux.HRDATA0 [29] \top.ahb_lite.mux.HRDATA0 [26:12] \top.ahb_lite.mux.HRDATA0 [9] \top.ahb_lite.mux.HRDATA0 [7:0] }
      New ports: A={ $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [24:23] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [21:19] $memory\top.ahb_lite.ahb_rom.rom$rdmux[0][0][0]$a$1568 [17:0] }, B=23'x, Y={ \top.ahb_lite.mux.HRDATA0 [29] \top.ahb_lite.mux.HRDATA0 [26] \top.ahb_lite.mux.HRDATA0 [24:22] \top.ahb_lite.mux.HRDATA0 [20:12] \top.ahb_lite.mux.HRDATA0 [9] \top.ahb_lite.mux.HRDATA0 [7:0] }
      New connections: { \top.ahb_lite.mux.HRDATA0 [31] \top.ahb_lite.mux.HRDATA0 [25] \top.ahb_lite.mux.HRDATA0 [21] } = { \top.ahb_lite.mux.HRDATA0 [29] \top.ahb_lite.mux.HRDATA0 [4] \top.ahb_lite.mux.HRDATA0 [6] }
  Optimizing cells in module \cpusys_goboard.
Performed a total of 70 changes.

27.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

27.29.6. Executing OPT_DFF pass (perform DFF optimizations).

27.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 32883 unused wires.
<suppressed ~1 debug messages>

27.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.29.9. Rerunning OPT passes. (Maybe there is more to do..)

27.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

27.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\top.arm.dp.rf.rf[9]$50734 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[9]).
Adding EN signal on $memory\top.arm.dp.rf.rf[8]$50732 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[8]).
Adding EN signal on $memory\top.arm.dp.rf.rf[7]$50730 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[7]).
Adding EN signal on $memory\top.arm.dp.rf.rf[6]$50728 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[6]).
Adding EN signal on $memory\top.arm.dp.rf.rf[5]$50726 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[5]).
Adding EN signal on $memory\top.arm.dp.rf.rf[4]$50724 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[4]).
Adding EN signal on $memory\top.arm.dp.rf.rf[3]$50722 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[3]).
Adding EN signal on $memory\top.arm.dp.rf.rf[2]$50720 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[2]).
Adding EN signal on $memory\top.arm.dp.rf.rf[1]$50718 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[1]).
Adding EN signal on $memory\top.arm.dp.rf.rf[14]$50744 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[14]).
Adding EN signal on $memory\top.arm.dp.rf.rf[13]$50742 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[13]).
Adding EN signal on $memory\top.arm.dp.rf.rf[12]$50740 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[12]).
Adding EN signal on $memory\top.arm.dp.rf.rf[11]$50738 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[11]).
Adding EN signal on $memory\top.arm.dp.rf.rf[10]$50736 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[10]).
Adding EN signal on $memory\top.arm.dp.rf.rf[0]$50716 ($dff) from module cpusys_goboard (D = \top.arm.dp.pcreg.d, Q = \top.arm.dp.rf.rf[0]).

27.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 15 unused cells and 15 unused wires.
<suppressed ~16 debug messages>

27.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.29.16. Rerunning OPT passes. (Maybe there is more to do..)

27.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

27.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

27.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.29.20. Executing OPT_DFF pass (perform DFF optimizations).

27.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.29.23. Finished OPT passes. (There is nothing left to do.)

27.30. Executing ICE40_WRAPCARRY pass (wrap carries).

27.31. Executing TECHMAP pass (map to technology primitives).

27.31.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

27.31.2. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

27.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eqx.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$b3b6ac92d800c6f07aa48f510f923d86a674e5a7\_90_demux for cells of type $demux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using template $paramod$3ab9a015ab781a81f86ab59e92093de7732cf40e\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$95ab7b964273918a033d1324366ecc612d202989\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$857150d3a9b7fb38b73bbaa31ff652415e553f98\_80_ice40_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$b8fb36dbb218c8f6b30171c756a8f8357614d906\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:f99bc636dfa98fa6983e40552c5a4e65ec62ea50$paramod$bbf4b179f3f7f63a46da2d3d9d298d80dabfbcd8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$ccbcf9cf459c8d68b04688a9a5245ee9d295a0be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$55fabc38af77a7e92aab69f00033bfed03b847e2\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$63301a5e78ceb1f2c17a4ac1894f292ed5701c1f\_90_demux for cells of type $demux.
Using template $paramod$5d1d2614b24accd0f9d06c4779fd9ef771faf494\_90_demux for cells of type $demux.
No more expansions possible.
<suppressed ~2421 debug messages>

27.32. Executing OPT pass (performing simple optimizations).

27.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~1442 debug messages>

27.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~630 debug messages>
Removed a total of 210 cells.

27.32.3. Executing OPT_DFF pass (perform DFF optimizations).

27.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 89 unused cells and 706 unused wires.
<suppressed ~90 debug messages>

27.32.5. Finished fast OPT passes.

27.33. Executing ICE40_OPT pass (performing simple optimizations).

27.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$alumacc.cc:485:replace_alu$762.slice[0].carry: CO=\slow_clk [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$alumacc.cc:485:replace_alu$768.slice[32].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$opt_expr.cc:1765:replace_const_cells$1380.slice[0].carry: CO=$auto$opt_expr.cc:1765:replace_const_cells$1380.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$opt_expr.cc:1765:replace_const_cells$1380.slice[5].carry: CO=1'1

27.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~325 debug messages>

27.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.33.4. Executing OPT_DFF pass (perform DFF optimizations).

27.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

27.33.6. Rerunning OPT passes. (Removed registers in this run.)

27.33.7. Running ICE40 specific optimizations.

27.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.33.10. Executing OPT_DFF pass (perform DFF optimizations).

27.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.33.12. Finished OPT passes. (There is nothing left to do.)

27.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

27.35. Executing TECHMAP pass (map to technology primitives).

27.35.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

27.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~814 debug messages>

27.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping cpusys_goboard.$auto$alumacc.cc:485:replace_alu$768.slice[32].carry ($lut).
Mapping cpusys_goboard.$auto$alumacc.cc:485:replace_alu$762.slice[0].carry ($lut).
Mapping cpusys_goboard.$auto$opt_expr.cc:1765:replace_const_cells$1380.slice[0].carry ($lut).
Mapping cpusys_goboard.$auto$opt_expr.cc:1765:replace_const_cells$1380.slice[5].carry ($lut).

27.38. Executing ICE40_OPT pass (performing simple optimizations).

27.38.1. Running ICE40 specific optimizations.

27.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~143 debug messages>

27.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

27.38.4. Executing OPT_DFF pass (perform DFF optimizations).

27.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 3964 unused wires.
<suppressed ~1 debug messages>

27.38.6. Rerunning OPT passes. (Removed registers in this run.)

27.38.7. Running ICE40 specific optimizations.

27.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

27.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

27.38.10. Executing OPT_DFF pass (perform DFF optimizations).

27.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

27.38.12. Finished OPT passes. (There is nothing left to do.)

27.39. Executing TECHMAP pass (map to technology primitives).

27.39.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

27.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

27.40. Executing ABC pass (technology mapping using ABC).

27.40.1. Extracting gate netlist of module `\cpusys_goboard' to `<abc-temp-dir>/input.blif'..
Extracted 3444 gates and 4786 wires to a netlist network with 1340 inputs and 340 outputs.

27.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     939.
ABC: Participating nodes from both networks       =    1950.
ABC: Participating nodes from the first network   =     938. (  40.12 % of nodes)
ABC: Participating nodes from the second network  =    1012. (  43.28 % of nodes)
ABC: Node pairs (any polarity)                    =     938. (  40.12 % of names can be moved)
ABC: Node pairs (same polarity)                   =     496. (  21.21 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

27.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2337
ABC RESULTS:        internal signals:     3106
ABC RESULTS:           input signals:     1340
ABC RESULTS:          output signals:      340
Removing temp directory.

27.41. Executing ICE40_WRAPCARRY pass (wrap carries).

27.42. Executing TECHMAP pass (map to technology primitives).

27.42.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

27.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 1 unused cells and 1552 unused wires.

27.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2392
  1-LUT               22
  2-LUT              180
  3-LUT              745
  4-LUT             1445
  with \SB_CARRY    (#0)   54
  with \SB_CARRY    (#1)   52

Eliminating LUTs.
Number of LUTs:     2392
  1-LUT               22
  2-LUT              180
  3-LUT              745
  4-LUT             1445
  with \SB_CARRY    (#0)   54
  with \SB_CARRY    (#1)   52

Combining LUTs.
Number of LUTs:     2392
  1-LUT               22
  2-LUT              180
  3-LUT              745
  4-LUT             1445
  with \SB_CARRY    (#0)   54
  with \SB_CARRY    (#1)   52

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~16083 debug messages>

27.44. Executing TECHMAP pass (map to technology primitives).

27.44.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

27.44.2. Continuing TECHMAP pass.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$e81ccdf114e03cb1a0d0d250e8e570de7b1a0b28\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$41e2bdb715ed368888a5c79aa60887c5513a3972\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$3acd3251d3bb2479bf34295bb2ac13c217481a2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod$a0110ffcad984c8a190b4246c453a50168ed201c\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$b82dd4a20dbf0d54061c2335089cd4250464eb8a\$lut for cells of type $lut.
Using template $paramod$4eda76f665dcbd983de0dda52c349cdd9af6e170\$lut for cells of type $lut.
Using template $paramod$9ae82cb0899316eb4c4ce93d82feab113df48247\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$7e573348b4dfc03f5ee25e96c3f2f756b7f9d445\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$0cd29e462cc788327d3d7e132543fab2c4588e59\$lut for cells of type $lut.
Using template $paramod$774861bf9b1885d60265e6ddea1c95a32f095489\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$52b0f43ae6cb52b5e726dd3244952f6f33bb5f19\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$9e45b1a8f5d89c07bcbb75a2bb1c598231b04feb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$6382f7860648fdb6f8a8dc690c25a62882cc501b\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$d81e419182194220fe1d6dd96690c56b1648ff58\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$a5d3da563b51fac23a710ae7cb3e8ce69cd22c5e\$lut for cells of type $lut.
Using template $paramod$38a207c707820f72f67386d2619ee46ee88964f9\$lut for cells of type $lut.
Using template $paramod$9c2dece5be18da29d8c978059399d07b00f5921c\$lut for cells of type $lut.
Using template $paramod$8ec29827d94e80e773a6f636dfcf3e1591527264\$lut for cells of type $lut.
Using template $paramod$bb07aa4c6c95211b927837b9073769ffabb3aaa5\$lut for cells of type $lut.
Using template $paramod$1defcde2651b9293b25dc8313a52210a02d52398\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$099ac8b11a70529a8e249a5b1b20b37a0be6d367\$lut for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod$162eacaa56f6f80a5a27551a5f2071c174364807\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$b3de4ae99a40b70873d8fc97fb2e9c023d741929\$lut for cells of type $lut.
Using template $paramod$1661fd1d8cfb54ddeba09cd7df814e0fd3aae40f\$lut for cells of type $lut.
Using template $paramod$60706ec56213e162b2b50cb37832db0ce0a86ab7\$lut for cells of type $lut.
Using template $paramod$05c363abf9bf41737697db9a75c379869832d91c\$lut for cells of type $lut.
Using template $paramod$4b4b0d164889d1f0429c06b8785349a50e11c667\$lut for cells of type $lut.
Using template $paramod$f9333290b738a242cb30b0de8879c5396e3e6451\$lut for cells of type $lut.
Using template $paramod$12876a77a23933587641472d85bdc8e7478ad1c0\$lut for cells of type $lut.
Using template $paramod$197077b00c11589fe99760d60a3c06cb8ac7c1e0\$lut for cells of type $lut.
Using template $paramod$7295da7c5b19f528a428229f2570e0a23ad372af\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$2932160a7a19ae17fa751c2e3a31ae6d89bfb098\$lut for cells of type $lut.
Using template $paramod$1b21b6ebf9cd1fc51cd0526156fd63c3c8c1491a\$lut for cells of type $lut.
Using template $paramod$ad397839a2a15b2410c4d9e2c3b4f0d2d26d4943\$lut for cells of type $lut.
Using template $paramod$ad0f7232ba560091d7782131d084926140df2f1f\$lut for cells of type $lut.
Using template $paramod$3dc6f044bc1d04c547547274c5e26893f75701d1\$lut for cells of type $lut.
Using template $paramod$c8a0c5267d35cd1c2caa1b0e150d701a5e409820\$lut for cells of type $lut.
Using template $paramod$e94afd183fcbde4c849d3e6c314d64883b2488d5\$lut for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$017d8c8b5f8f0bd543e7b1e7d026dcb67424a519\$lut for cells of type $lut.
Using template $paramod$164bdefb5d1c06a6528ecdb35b429071950e50d7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$8a688b470fbdc357e4a14f08dc23c872c147c340\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$9fe3d94a8dbecbb66f48aab3bc15f1821fe8206d\$lut for cells of type $lut.
Using template $paramod$3525bc88021caeb0b6fb10b051fd947bd104e42a\$lut for cells of type $lut.
Using template $paramod$86805485e22fcf2b4e33623fbd1ab0da1e0a6b62\$lut for cells of type $lut.
Using template $paramod$6047691d8bbb6cff4c2e5680ed3445ca5625ef2f\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod$e13f3a422eb2a2c8ff7a213393ad44013bc5b64f\$lut for cells of type $lut.
Using template $paramod$eb5aaa337e0b6f79439aa1c91f8a29764ae9c370\$lut for cells of type $lut.
Using template $paramod$282f8342f73f915a7ad601426de8e3c86e230bde\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~4683 debug messages>
Removed 0 unused cells and 6041 unused wires.

27.45. Executing AUTONAME pass.
Renamed 42078 objects in module cpusys_goboard (80 iterations).
<suppressed ~4808 debug messages>

27.46. Executing HIERARCHY pass (managing design hierarchy).

27.46.1. Analyzing design hierarchy..
Top module:  \cpusys_goboard

27.46.2. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Removed 0 unused modules.

27.47. Printing statistics.

=== cpusys_goboard ===

   Number of wires:               1845
   Number of wire bits:          12195
   Number of public wires:        1845
   Number of public wire bits:   12195
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3494
     SB_CARRY                       54
     SB_DFF                         81
     SB_DFFE                       488
     SB_DFFER                       68
     SB_DFFR                       134
     SB_DFFSR                       21
     SB_LUT4                      2392
     SB_RAM40_4K                   256

27.48. Executing CHECK pass (checking for obvious problems).
Checking module cpusys_goboard...
Found and reported 0 problems.

27.49. Executing JSON backend.

End of script. Logfile hash: 83fa292fb0, CPU: user 4.16s system 0.15s
Yosys 0.19+36 (git sha1 30a4218f5, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 41% 1x abc (3 sec), 11% 32x opt_expr (0 sec), ...
