
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.19+36 (git sha1 30a4218f5, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `verilog_defines  -DNO_ICE40_DEFAULT_ASSIGNMENTS ; read_verilog -sv -I../rtl cpusys_goboard.sv goboard_7seg.sv ../rtl/adder.sv ../rtl/alu.sv ../rtl/arm.sv ../rtl/condlogic.sv ../rtl/controller.sv ../rtl/cpu_main.sv ../rtl/datapath.sv ../rtl/decoder.sv ../rtl/dmem.sv ../rtl/extend.sv ../rtl/flopenr.sv ../rtl/flopr.sv ../rtl/imem.sv ../rtl/mux2.sv ../rtl/regfile.sv ; synth_ice40 -device u -json cpusys_goboard.json' --

1. Executing Verilog-2005 frontend: cpusys_goboard.sv
Parsing SystemVerilog input from `cpusys_goboard.sv' to AST representation.
Generating RTLIL representation for module `\cpusys_goboard'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: goboard_7seg.sv
Parsing SystemVerilog input from `goboard_7seg.sv' to AST representation.
Generating RTLIL representation for module `\goboard_7seg'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../rtl/adder.sv
Parsing SystemVerilog input from `../rtl/adder.sv' to AST representation.
Generating RTLIL representation for module `\adder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../rtl/alu.sv
Parsing SystemVerilog input from `../rtl/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../rtl/arm.sv
Parsing SystemVerilog input from `../rtl/arm.sv' to AST representation.
Generating RTLIL representation for module `\arm'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../rtl/condlogic.sv
Parsing SystemVerilog input from `../rtl/condlogic.sv' to AST representation.
Generating RTLIL representation for module `\condlogic'.
Generating RTLIL representation for module `\condcheck'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../rtl/controller.sv
Parsing SystemVerilog input from `../rtl/controller.sv' to AST representation.
Generating RTLIL representation for module `\controller'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../rtl/cpu_main.sv
Parsing SystemVerilog input from `../rtl/cpu_main.sv' to AST representation.
Generating RTLIL representation for module `\cpu_main'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../rtl/datapath.sv
Parsing SystemVerilog input from `../rtl/datapath.sv' to AST representation.
Generating RTLIL representation for module `\datapath'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../rtl/decoder.sv
Parsing SystemVerilog input from `../rtl/decoder.sv' to AST representation.
Generating RTLIL representation for module `\decoder'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../rtl/dmem.sv
Parsing SystemVerilog input from `../rtl/dmem.sv' to AST representation.
Generating RTLIL representation for module `\dmem'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../rtl/extend.sv
Parsing SystemVerilog input from `../rtl/extend.sv' to AST representation.
Generating RTLIL representation for module `\extend'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ../rtl/flopenr.sv
Parsing SystemVerilog input from `../rtl/flopenr.sv' to AST representation.
Generating RTLIL representation for module `\flopenr'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ../rtl/flopr.sv
Parsing SystemVerilog input from `../rtl/flopr.sv' to AST representation.
Generating RTLIL representation for module `\flopr'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ../rtl/imem.sv
Parsing SystemVerilog input from `../rtl/imem.sv' to AST representation.
Generating RTLIL representation for module `\imem'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ../rtl/mux2.sv
Parsing SystemVerilog input from `../rtl/mux2.sv' to AST representation.
Generating RTLIL representation for module `\mux2'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ../rtl/regfile.sv
Parsing SystemVerilog input from `../rtl/regfile.sv' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

18. Executing SYNTH_ICE40 pass.

18.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

18.2. Executing HIERARCHY pass (managing design hierarchy).

18.2.1. Finding top of design hierarchy..
root of   0 design levels: regfile             
root of   0 design levels: mux2                
root of   0 design levels: imem                
root of   0 design levels: flopr               
root of   0 design levels: flopenr             
root of   0 design levels: extend              
root of   0 design levels: dmem                
root of   0 design levels: decoder             
root of   1 design levels: datapath            
root of   4 design levels: cpu_main            
root of   2 design levels: controller          
root of   0 design levels: condcheck           
root of   1 design levels: condlogic           
root of   3 design levels: arm                 
root of   0 design levels: alu                 
root of   0 design levels: adder               
root of   0 design levels: goboard_7seg        
root of   5 design levels: cpusys_goboard      
Automatically selected cpusys_goboard as design top module.

18.2.2. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Used module:     \goboard_7seg
Used module:     \cpu_main
Used module:         \dmem
Used module:         \imem
Used module:         \arm
Used module:             \datapath
Used module:                 \alu
Used module:                 \mux2
Used module:                 \extend
Used module:                 \regfile
Used module:                 \adder
Used module:                 \flopr
Used module:             \controller
Used module:                 \condlogic
Used module:                     \condcheck
Used module:                     \flopenr
Used module:                 \decoder
Parameter 1 (\WIDTH) = 32

18.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 4

18.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2'.
Parameter 1 (\WIDTH) = 4
Generating RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000000100'.
Parameter 1 (\WIDTH) = 4
Found cached RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000000100'.
Parameter 1 (\WIDTH) = 32

18.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\adder'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32

18.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\flopr'.
Parameter 1 (\WIDTH) = 32
Generating RTLIL representation for module `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 32
Found cached RTLIL representation for module `$paramod\mux2\WIDTH=s32'00000000000000000000000000100000'.
Parameter 1 (\WIDTH) = 2

18.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\flopenr'.
Parameter 1 (\WIDTH) = 2
Generating RTLIL representation for module `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010'.
Parameter 1 (\WIDTH) = 2
Found cached RTLIL representation for module `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010'.

18.2.8. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Used module:     \goboard_7seg
Used module:     \cpu_main
Used module:         \dmem
Used module:         \imem
Used module:         \arm
Used module:             \datapath
Used module:                 \alu
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000100000
Used module:                 \extend
Used module:                 \regfile
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000000100
Used module:                 $paramod\adder\WIDTH=s32'00000000000000000000000000100000
Used module:                 $paramod\flopr\WIDTH=s32'00000000000000000000000000100000
Used module:             \controller
Used module:                 \condlogic
Used module:                     \condcheck
Used module:                     $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010
Used module:                 \decoder

18.2.9. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Used module:     \goboard_7seg
Used module:     \cpu_main
Used module:         \dmem
Used module:         \imem
Used module:         \arm
Used module:             \datapath
Used module:                 \alu
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000100000
Used module:                 \extend
Used module:                 \regfile
Used module:                 $paramod\mux2\WIDTH=s32'00000000000000000000000000000100
Used module:                 $paramod\adder\WIDTH=s32'00000000000000000000000000100000
Used module:                 $paramod\flopr\WIDTH=s32'00000000000000000000000000100000
Used module:             \controller
Used module:                 \condlogic
Used module:                     \condcheck
Used module:                     $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010
Used module:                 \decoder
Removing unused module `\mux2'.
Removing unused module `\flopr'.
Removing unused module `\flopenr'.
Removing unused module `\adder'.
Removed 4 unused modules.
Mapping positional arguments of cell datapath.alu (alu).
Mapping positional arguments of cell datapath.srcbmux ($paramod\mux2\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.ext (extend).
Mapping positional arguments of cell datapath.resmux ($paramod\mux2\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.rf (regfile).
Mapping positional arguments of cell datapath.ra2mux ($paramod\mux2\WIDTH=s32'00000000000000000000000000000100).
Mapping positional arguments of cell datapath.ra1mux ($paramod\mux2\WIDTH=s32'00000000000000000000000000000100).
Mapping positional arguments of cell datapath.pcadd2 ($paramod\adder\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.pcadd1 ($paramod\adder\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.pcreg ($paramod\flopr\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell datapath.pcmux ($paramod\mux2\WIDTH=s32'00000000000000000000000000100000).
Mapping positional arguments of cell cpu_main.dmem (dmem).
Mapping positional arguments of cell cpu_main.imem (imem).
Mapping positional arguments of cell cpu_main.arm (arm).
Mapping positional arguments of cell controller.cl (condlogic).
Mapping positional arguments of cell controller.dec (decoder).
Mapping positional arguments of cell condlogic.cc (condcheck).
Mapping positional arguments of cell condlogic.flagreg0 ($paramod\flopenr\WIDTH=s32'00000000000000000000000000000010).
Mapping positional arguments of cell condlogic.flagreg1 ($paramod\flopenr\WIDTH=s32'00000000000000000000000000000010).
Mapping positional arguments of cell arm.dp (datapath).
Mapping positional arguments of cell arm.c (controller).

18.3. Executing PROC pass (convert processes to netlists).

18.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

18.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$412 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$407 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$403 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$398 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$395 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$392 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$389 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$386 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$378 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$373 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$369 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$364 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$361 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$358 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$355 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$352 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$../rtl/regfile.sv:15$160 in module regfile.
Marked 1 switch rules as full_case in process $proc$../rtl/flopenr.sv:6$556 in module $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.
Marked 1 switch rules as full_case in process $proc$../rtl/flopr.sv:5$555 in module $paramod\flopr\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../rtl/extend.sv:0$81 in module extend.
Marked 1 switch rules as full_case in process $proc$../rtl/dmem.sv:30$73 in module dmem.
Marked 2 switch rules as full_case in process $proc$../rtl/decoder.sv:0$62 in module decoder.
Marked 3 switch rules as full_case in process $proc$../rtl/decoder.sv:0$61 in module decoder.
Marked 1 switch rules as full_case in process $proc$../rtl/condlogic.sv:0$45 in module condcheck.
Removed 1 dead cases from process $proc$../rtl/alu.sv:0$35 in module alu.
Marked 1 switch rules as full_case in process $proc$../rtl/alu.sv:0$35 in module alu.
Removed 1 dead cases from process $proc$goboard_7seg.sv:35$20 in module goboard_7seg.
Marked 1 switch rules as full_case in process $proc$goboard_7seg.sv:35$20 in module goboard_7seg.
Marked 2 switch rules as full_case in process $proc$cpusys_goboard.sv:72$5 in module cpusys_goboard.
Removed a total of 2 dead cases.

18.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 12 redundant assignments.
Promoted 63 assignments to connections.

18.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$415'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$411'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$406'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$402'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$397'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$394'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$391'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$388'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$385'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$383'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$381'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$377'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$372'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$368'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$363'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$360'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$357'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$354'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$351'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$349'.
  Set init value: \Q = 1'0

18.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$412'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$403'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$395'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$389'.
Found async reset \S in `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$378'.
Found async reset \R in `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$369'.
Found async reset \S in `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$361'.
Found async reset \R in `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$355'.
Found async reset \reset in `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:6$556'.
Found async reset \reset in `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:5$555'.

18.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~33 debug messages>

18.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$415'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$412'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$411'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$407'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$406'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$403'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$402'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$398'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$397'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$395'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$394'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$392'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$391'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$389'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$388'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$386'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$385'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$384'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$383'.
Creating decoders for process `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$382'.
Creating decoders for process `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$381'.
Creating decoders for process `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$378'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$377'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$373'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$372'.
Creating decoders for process `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$369'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$368'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$364'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$363'.
Creating decoders for process `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$361'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$360'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$358'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$357'.
Creating decoders for process `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$355'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$354'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$352'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$351'.
Creating decoders for process `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$350'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$349'.
Creating decoders for process `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$348'.
Creating decoders for process `\regfile.$proc$../rtl/regfile.sv:15$160'.
     1/3: $1$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$166
     2/3: $1$memwr$\rf$../rtl/regfile.sv:16$159_DATA[31:0]$165
     3/3: $1$memwr$\rf$../rtl/regfile.sv:16$159_ADDR[3:0]$164
Creating decoders for process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:6$556'.
     1/1: $0\q[1:0]
Creating decoders for process `\imem.$proc$../rtl/imem.sv:0$133'.
Creating decoders for process `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:5$555'.
     1/1: $0\q[31:0]
Creating decoders for process `\extend.$proc$../rtl/extend.sv:0$81'.
     1/1: $1\ExtImm[31:0]
Creating decoders for process `\dmem.$proc$../rtl/dmem.sv:30$73'.
     1/3: $1$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$79
     2/3: $1$memwr$\RAM$../rtl/dmem.sv:33$72_DATA[7:0]$78
     3/3: $1$memwr$\RAM$../rtl/dmem.sv:33$72_ADDR[7:0]$77
Creating decoders for process `\decoder.$proc$../rtl/decoder.sv:0$62'.
     1/4: $1\FlagW[1:0] [1]
     2/4: $2\ALUControl[1:0]
     3/4: $1\FlagW[1:0] [0]
     4/4: $1\ALUControl[1:0]
Creating decoders for process `\decoder.$proc$../rtl/decoder.sv:0$61'.
     1/3: $3\controls[9:0]
     2/3: $2\controls[9:0]
     3/3: $1\controls[9:0]
Creating decoders for process `\condcheck.$proc$../rtl/condlogic.sv:0$45'.
     1/1: $1\CondEx[0:0]
Creating decoders for process `\alu.$proc$../rtl/alu.sv:0$35'.
     1/1: $1\ALUResult[31:0]
Creating decoders for process `\goboard_7seg.$proc$goboard_7seg.sv:35$20'.
     1/1: $0\segments[6:0]
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:124$8'.
     1/2: $0\high_seg[3:0]
     2/2: $0\low_seg[3:0]
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
     1/2: $0\slow_clk[19:0]
     2/2: $0\clk_en[0:0]
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
Creating decoders for process `\cpusys_goboard.$proc$cpusys_goboard.sv:0$1'.

18.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:40$84_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:41$85_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:42$86_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:43$87_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:44$88_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:45$89_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:46$90_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:47$91_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:48$92_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:49$93_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:50$94_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:51$95_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:52$96_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:54$97_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:55$98_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:56$99_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:57$100_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:58$101_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:59$102_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:60$103_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:61$104_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:62$105_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:63$106_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\imem.$memwr$\RAM$../rtl/imem.sv:64$107_EN' from process `\imem.$proc$../rtl/imem.sv:0$133'.
No latch inferred for signal `\extend.\ExtImm' from process `\extend.$proc$../rtl/extend.sv:0$81'.
No latch inferred for signal `\decoder.\ALUControl' from process `\decoder.$proc$../rtl/decoder.sv:0$62'.
No latch inferred for signal `\decoder.\FlagW' from process `\decoder.$proc$../rtl/decoder.sv:0$62'.
No latch inferred for signal `\decoder.\controls' from process `\decoder.$proc$../rtl/decoder.sv:0$61'.
No latch inferred for signal `\condcheck.\CondEx' from process `\condcheck.$proc$../rtl/condlogic.sv:0$45'.
No latch inferred for signal `\alu.\ALUResult' from process `\alu.$proc$../rtl/alu.sv:0$35'.
No latch inferred for signal `\cpusys_goboard.\clk' from process `\cpusys_goboard.$proc$cpusys_goboard.sv:0$1'.

18.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$412'.
  created $adff cell `$procdff$704' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$407'.
  created $dff cell `$procdff$705' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$403'.
  created $adff cell `$procdff$706' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$398'.
  created $dff cell `$procdff$707' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$395'.
  created $adff cell `$procdff$708' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$392'.
  created $dff cell `$procdff$709' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$389'.
  created $adff cell `$procdff$710' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$386'.
  created $dff cell `$procdff$711' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$384'.
  created $dff cell `$procdff$712' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$382'.
  created $dff cell `$procdff$713' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$378'.
  created $adff cell `$procdff$714' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$373'.
  created $dff cell `$procdff$715' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$369'.
  created $adff cell `$procdff$716' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$364'.
  created $dff cell `$procdff$717' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$361'.
  created $adff cell `$procdff$718' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$358'.
  created $dff cell `$procdff$719' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$355'.
  created $adff cell `$procdff$720' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$352'.
  created $dff cell `$procdff$721' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$350'.
  created $dff cell `$procdff$722' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$348'.
  created $dff cell `$procdff$723' with positive edge clock.
Creating register for signal `\regfile.$memwr$\rf$../rtl/regfile.sv:16$159_ADDR' using process `\regfile.$proc$../rtl/regfile.sv:15$160'.
  created $dff cell `$procdff$724' with positive edge clock.
Creating register for signal `\regfile.$memwr$\rf$../rtl/regfile.sv:16$159_DATA' using process `\regfile.$proc$../rtl/regfile.sv:15$160'.
  created $dff cell `$procdff$725' with positive edge clock.
Creating register for signal `\regfile.$memwr$\rf$../rtl/regfile.sv:16$159_EN' using process `\regfile.$proc$../rtl/regfile.sv:15$160'.
  created $dff cell `$procdff$726' with positive edge clock.
Creating register for signal `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.\q' using process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:6$556'.
  created $adff cell `$procdff$727' with positive edge clock and positive level reset.
Creating register for signal `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.\q' using process `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:5$555'.
  created $adff cell `$procdff$728' with positive edge clock and positive level reset.
Creating register for signal `\dmem.\rd' using process `\dmem.$proc$../rtl/dmem.sv:30$73'.
  created $dff cell `$procdff$729' with positive edge clock.
Creating register for signal `\dmem.$memwr$\RAM$../rtl/dmem.sv:33$72_ADDR' using process `\dmem.$proc$../rtl/dmem.sv:30$73'.
  created $dff cell `$procdff$730' with positive edge clock.
Creating register for signal `\dmem.$memwr$\RAM$../rtl/dmem.sv:33$72_DATA' using process `\dmem.$proc$../rtl/dmem.sv:30$73'.
  created $dff cell `$procdff$731' with positive edge clock.
Creating register for signal `\dmem.$memwr$\RAM$../rtl/dmem.sv:33$72_EN' using process `\dmem.$proc$../rtl/dmem.sv:30$73'.
  created $dff cell `$procdff$732' with positive edge clock.
Creating register for signal `\goboard_7seg.\segments' using process `\goboard_7seg.$proc$goboard_7seg.sv:35$20'.
  created $dff cell `$procdff$733' with positive edge clock.
Creating register for signal `\cpusys_goboard.\low_seg' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:124$8'.
  created $dff cell `$procdff$734' with positive edge clock.
Creating register for signal `\cpusys_goboard.\high_seg' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:124$8'.
  created $dff cell `$procdff$735' with positive edge clock.
Creating register for signal `\cpusys_goboard.\clk_en' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
  created $dff cell `$procdff$736' with positive edge clock.
Creating register for signal `\cpusys_goboard.\slow_clk' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
  created $dff cell `$procdff$737' with positive edge clock.
Creating register for signal `\cpusys_goboard.\reset_ff0' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
  created $dff cell `$procdff$738' with positive edge clock.
Creating register for signal `\cpusys_goboard.\reset_ff1' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
  created $dff cell `$procdff$739' with positive edge clock.
Creating register for signal `\cpusys_goboard.\reset' using process `\cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
  created $dff cell `$procdff$740' with positive edge clock.

18.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

18.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$415'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$412'.
Removing empty process `SB_DFFNES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$412'.
Removing empty process `SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$411'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$407'.
Removing empty process `SB_DFFNESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$407'.
Removing empty process `SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$406'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$403'.
Removing empty process `SB_DFFNER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$403'.
Removing empty process `SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$402'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$398'.
Removing empty process `SB_DFFNESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$398'.
Removing empty process `SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$397'.
Removing empty process `SB_DFFNS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$395'.
Removing empty process `SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$394'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$392'.
Removing empty process `SB_DFFNSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$392'.
Removing empty process `SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$391'.
Removing empty process `SB_DFFNR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$389'.
Removing empty process `SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$388'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$386'.
Removing empty process `SB_DFFNSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$386'.
Removing empty process `SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$385'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$384'.
Removing empty process `SB_DFFNE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$384'.
Removing empty process `SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$383'.
Removing empty process `SB_DFFN.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$382'.
Removing empty process `SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$381'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$378'.
Removing empty process `SB_DFFES.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$378'.
Removing empty process `SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$377'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$373'.
Removing empty process `SB_DFFESS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$373'.
Removing empty process `SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$372'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$369'.
Removing empty process `SB_DFFER.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$369'.
Removing empty process `SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$368'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$364'.
Removing empty process `SB_DFFESR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$364'.
Removing empty process `SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$363'.
Removing empty process `SB_DFFS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$361'.
Removing empty process `SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$360'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$358'.
Removing empty process `SB_DFFSS.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$358'.
Removing empty process `SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$357'.
Removing empty process `SB_DFFR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$355'.
Removing empty process `SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$354'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$352'.
Removing empty process `SB_DFFSR.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$352'.
Removing empty process `SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$351'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$350'.
Removing empty process `SB_DFFE.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$350'.
Removing empty process `SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$349'.
Removing empty process `SB_DFF.$proc$/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$348'.
Found and cleaned up 1 empty switch in `\regfile.$proc$../rtl/regfile.sv:15$160'.
Removing empty process `regfile.$proc$../rtl/regfile.sv:15$160'.
Found and cleaned up 1 empty switch in `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:6$556'.
Removing empty process `$paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.$proc$../rtl/flopenr.sv:6$556'.
Removing empty process `imem.$proc$../rtl/imem.sv:0$133'.
Removing empty process `$paramod\flopr\WIDTH=s32'00000000000000000000000000100000.$proc$../rtl/flopr.sv:5$555'.
Found and cleaned up 1 empty switch in `\extend.$proc$../rtl/extend.sv:0$81'.
Removing empty process `extend.$proc$../rtl/extend.sv:0$81'.
Found and cleaned up 1 empty switch in `\dmem.$proc$../rtl/dmem.sv:30$73'.
Removing empty process `dmem.$proc$../rtl/dmem.sv:30$73'.
Found and cleaned up 2 empty switches in `\decoder.$proc$../rtl/decoder.sv:0$62'.
Removing empty process `decoder.$proc$../rtl/decoder.sv:0$62'.
Found and cleaned up 3 empty switches in `\decoder.$proc$../rtl/decoder.sv:0$61'.
Removing empty process `decoder.$proc$../rtl/decoder.sv:0$61'.
Found and cleaned up 1 empty switch in `\condcheck.$proc$../rtl/condlogic.sv:0$45'.
Removing empty process `condcheck.$proc$../rtl/condlogic.sv:0$45'.
Found and cleaned up 1 empty switch in `\alu.$proc$../rtl/alu.sv:0$35'.
Removing empty process `alu.$proc$../rtl/alu.sv:0$35'.
Found and cleaned up 1 empty switch in `\goboard_7seg.$proc$goboard_7seg.sv:35$20'.
Removing empty process `goboard_7seg.$proc$goboard_7seg.sv:35$20'.
Found and cleaned up 2 empty switches in `\cpusys_goboard.$proc$cpusys_goboard.sv:124$8'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:124$8'.
Found and cleaned up 2 empty switches in `\cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:72$5'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:66$2'.
Removing empty process `cpusys_goboard.$proc$cpusys_goboard.sv:0$1'.
Cleaned up 34 empty switches.

18.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2\WIDTH=s32'00000000000000000000000000100000.
Optimizing module regfile.
Optimizing module $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.
Optimizing module imem.
Optimizing module $paramod\flopr\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\adder\WIDTH=s32'00000000000000000000000000100000.
Optimizing module extend.
<suppressed ~1 debug messages>
Optimizing module dmem.
Optimizing module decoder.
<suppressed ~4 debug messages>
Optimizing module datapath.
Optimizing module cpu_main.
Optimizing module controller.
Optimizing module condcheck.
<suppressed ~1 debug messages>
Optimizing module condlogic.
Optimizing module arm.
Optimizing module alu.
<suppressed ~2 debug messages>
Optimizing module $paramod\mux2\WIDTH=s32'00000000000000000000000000000100.
Optimizing module goboard_7seg.
Optimizing module cpusys_goboard.
<suppressed ~1 debug messages>

18.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\mux2\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module regfile.
Deleting now unused module $paramod\flopenr\WIDTH=s32'00000000000000000000000000000010.
Deleting now unused module imem.
Deleting now unused module $paramod\flopr\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\adder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module extend.
Deleting now unused module dmem.
Deleting now unused module decoder.
Deleting now unused module datapath.
Deleting now unused module cpu_main.
Deleting now unused module controller.
Deleting now unused module condcheck.
Deleting now unused module condlogic.
Deleting now unused module arm.
Deleting now unused module alu.
Deleting now unused module $paramod\mux2\WIDTH=s32'00000000000000000000000000000100.
Deleting now unused module goboard_7seg.
<suppressed ~24 debug messages>

18.5. Executing TRIBUF pass.

18.6. Executing DEMINOUT pass (demote inout ports to input or output).

18.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 13 unused cells and 163 unused wires.
<suppressed ~15 debug messages>

18.9. Executing CHECK pass (checking for obvious problems).
Checking module cpusys_goboard...
Found and reported 0 problems.

18.10. Executing OPT pass (performing simple optimizations).

18.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

18.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\main.\arm.\c.\dec.$procmux$654.
    dead port 2/2 on $mux $flatten\main.\arm.\c.\dec.$procmux$662.
Removed 2 multiplexer ports.
<suppressed ~29 debug messages>

18.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
    New ctrl vector for $pmux cell $flatten\main.\arm.\c.\dec.$procmux$635: { $flatten\main.\arm.\c.\dec.$procmux$640_CMP $flatten\main.\arm.\c.\dec.$procmux$638_CMP $auto$opt_reduce.cc:134:opt_pmux$744 $flatten\main.\arm.\c.\dec.$procmux$636_CMP }
    Consolidated identical input bits for $mux cell $flatten\main.\arm.\dp.\rf.$procmux$606:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163
      New ports: A=1'0, B=1'1, Y=$flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0]
      New connections: $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [31:1] = { $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] $flatten\main.\arm.\dp.\rf.$0$memwr$\rf$../rtl/regfile.sv:16$159_EN[31:0]$163 [0] }
    Consolidated identical input bits for $mux cell $flatten\main.\dmem.$procmux$622:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76
      New ports: A=1'0, B=1'1, Y=$flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0]
      New connections: $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [7:1] = { $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] $flatten\main.\dmem.$0$memwr$\RAM$../rtl/dmem.sv:33$72_EN[7:0]$76 [0] }
  Optimizing cells in module \cpusys_goboard.
Performed a total of 3 changes.

18.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 8 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 9 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 10 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 11 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 12 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 13 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 14 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 15 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 16 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 17 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 18 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 19 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 20 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 21 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 22 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 23 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 24 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 25 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 26 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 27 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 28 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 29 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 30 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 31 on $flatten\main.\dmem.$procdff$729 ($dff) from module cpusys_goboard.

18.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

18.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.10.9. Rerunning OPT passes. (Maybe there is more to do..)

18.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

18.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.10.13. Executing OPT_DFF pass (perform DFF optimizations).

18.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.10.16. Finished OPT passes. (There is nothing left to do.)

18.11. Executing FSM pass (extract and optimize FSM).

18.11.1. Executing FSM_DETECT pass (finding FSMs in design).

18.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

18.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

18.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

18.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

18.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

18.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

18.12. Executing OPT pass (performing simple optimizations).

18.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

18.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$737 ($dff) from module cpusys_goboard (D = $add$cpusys_goboard.sv:77$6_Y, Q = \slow_clk, rval = 20'00000000000000000000).
Adding SRST signal on $procdff$736 ($dff) from module cpusys_goboard (D = $procmux$699_Y, Q = \clk_en, rval = 1'0).
Adding EN signal on $procdff$735 ($dff) from module cpusys_goboard (D = \main.arm.dp.srcbmux.d0 [7:4], Q = \high_seg).
Adding EN signal on $procdff$734 ($dff) from module cpusys_goboard (D = \main.arm.dp.srcbmux.d0 [3:0], Q = \low_seg).
Adding EN signal on $flatten\main.\arm.\c.\cl.\flagreg1.$procdff$727 ($adff) from module cpusys_goboard (D = { \main.arm.dp.alu.ALUResult [31] \main.arm.dp.alu.Z }, Q = \main.arm.c.cl.flagreg1.q).
Adding EN signal on $flatten\main.\arm.\c.\cl.\flagreg0.$procdff$727 ($adff) from module cpusys_goboard (D = { \main.arm.c.cl.flagreg0.d [1] \main.arm.dp.alu.Z }, Q = \main.arm.c.cl.flagreg0.q).

18.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

18.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.12.9. Rerunning OPT passes. (Maybe there is more to do..)

18.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

18.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.12.13. Executing OPT_DFF pass (perform DFF optimizations).

18.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.12.16. Finished OPT passes. (There is nothing left to do.)

18.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port cpusys_goboard.$flatten\hexout1.$auto$mem.cc:319:emit$560 ($flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558).
Removed top 28 address bits (of 32) from memory init port cpusys_goboard.$flatten\hexout2.$auto$mem.cc:319:emit$560 ($flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:40$109 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:41$110 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:42$111 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:43$112 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:44$113 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:45$114 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:46$115 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:47$116 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:48$117 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:49$118 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:50$119 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:51$120 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:52$121 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:54$122 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:55$123 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:56$124 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:57$125 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:58$126 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:59$127 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:60$128 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:61$129 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:62$130 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:63$131 (main.imem.RAM).
Removed top 25 address bits (of 32) from memory init port cpusys_goboard.$flatten\main.\imem.$meminit$\RAM$../rtl/imem.sv:64$132 (main.imem.RAM).
Removed top 23 address bits (of 30) from memory read port cpusys_goboard.$flatten\main.\imem.$memrd$\RAM$../rtl/imem.sv:72$108 (main.imem.RAM).
Removed top 27 bits (of 32) from port B of cell cpusys_goboard.$eqx$cpusys_goboard.sv:125$9 ($eqx).
Removed top 3 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$684_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$683_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$682_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$681_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$680_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$679_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\cl.\cc.$procmux$678_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\dec.$eq$../rtl/decoder.sv:47$64 ($eq).
Removed top 2 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\dec.$procmux$639_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\dec.$procmux$640_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cpusys_goboard.$flatten\main.\arm.\c.\dec.$procmux$655_CMP0 ($eq).
Removed top 4 bits (of 10) from mux cell cpusys_goboard.$flatten\main.\arm.\c.\dec.$procmux$660 ($mux).
Removed top 1 bits (of 2) from port B of cell cpusys_goboard.$flatten\main.\arm.\dp.\ext.$procmux$619_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell cpusys_goboard.$flatten\main.\arm.\dp.\pcadd2.$add$../rtl/adder.sv:4$554 ($add).
Removed top 29 bits (of 32) from port B of cell cpusys_goboard.$flatten\main.\arm.\dp.\pcadd1.$add$../rtl/adder.sv:4$554 ($add).
Removed top 4 bits (of 10) from wire cpusys_goboard.$flatten\main.\arm.\c.\dec.$2\controls[9:0].
Removed top 24 bits (of 32) from wire cpusys_goboard.$flatten\main.\dmem.$0\rd[31:0].

18.14. Executing PEEPOPT pass (run peephole optimizers).

18.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

18.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module cpusys_goboard that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\main.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:18$171 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$170_Y.
    Found 1 candidates: $flatten\main.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:17$168
    Analyzing resource sharing with $flatten\main.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:17$168 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:17$167_Y.
      Forbidden control signals for this pair of cells: $flatten\main.\arm.\dp.\alu.$eq$../rtl/alu.sv:16$33_Y
      Activation pattern for cell $flatten\main.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:18$171: $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$170_Y = 1'0
      Activation pattern for cell $flatten\main.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:17$168: $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:17$167_Y = 1'0
      Size of SAT problem: 0 cells, 292 variables, 752 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:18$170_Y $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:17$167_Y } = 2'00
  Analyzing resource sharing options for $flatten\main.\arm.\dp.\rf.$memrd$\rf$../rtl/regfile.sv:17$168 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\main.\arm.\dp.\rf.$eq$../rtl/regfile.sv:17$167_Y.
    No candidates found.

18.17. Executing TECHMAP pass (map to technology primitives).

18.17.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

18.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

18.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cpusys_goboard:
  creating $macc model for $add$cpusys_goboard.sv:77$6 ($add).
  creating $macc model for $flatten\main.\arm.\dp.\alu.$add$../rtl/alu.sv:12$24 ($add).
  creating $macc model for $flatten\main.\arm.\dp.\alu.$add$../rtl/alu.sv:12$25 ($add).
  creating $macc model for $flatten\main.\arm.\dp.\pcadd1.$add$../rtl/adder.sv:4$554 ($add).
  creating $macc model for $flatten\main.\arm.\dp.\pcadd2.$add$../rtl/adder.sv:4$554 ($add).
  merging $macc model for $flatten\main.\arm.\dp.\alu.$add$../rtl/alu.sv:12$24 into $flatten\main.\arm.\dp.\alu.$add$../rtl/alu.sv:12$25.
  creating $alu model for $macc $flatten\main.\arm.\dp.\pcadd1.$add$../rtl/adder.sv:4$554.
  creating $alu model for $macc $flatten\main.\arm.\dp.\alu.$add$../rtl/alu.sv:12$25.
  creating $alu model for $macc $flatten\main.\arm.\dp.\pcadd2.$add$../rtl/adder.sv:4$554.
  creating $alu model for $macc $add$cpusys_goboard.sv:77$6.
  creating $alu cell for $add$cpusys_goboard.sv:77$6: $auto$alumacc.cc:485:replace_alu$755
  creating $alu cell for $flatten\main.\arm.\dp.\pcadd2.$add$../rtl/adder.sv:4$554: $auto$alumacc.cc:485:replace_alu$758
  creating $alu cell for $flatten\main.\arm.\dp.\alu.$add$../rtl/alu.sv:12$25: $auto$alumacc.cc:485:replace_alu$761
  creating $alu cell for $flatten\main.\arm.\dp.\pcadd1.$add$../rtl/adder.sv:4$554: $auto$alumacc.cc:485:replace_alu$764
  created 4 $alu and 0 $macc cells.

18.21. Executing OPT pass (performing simple optimizations).

18.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

18.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.21.6. Executing OPT_DFF pass (perform DFF optimizations).

18.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

18.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.21.9. Rerunning OPT passes. (Maybe there is more to do..)

18.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

18.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.21.13. Executing OPT_DFF pass (perform DFF optimizations).

18.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.21.16. Finished OPT passes. (There is nothing left to do.)

18.22. Executing MEMORY pass.

18.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

18.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

18.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing cpusys_goboard.main.arm.dp.rf.rf write port 0.
  Analyzing cpusys_goboard.main.dmem.RAM write port 0.

18.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

18.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558'[0] in module `\cpusys_goboard': merging output FF to cell.
Checking read port `$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558'[0] in module `\cpusys_goboard': merging output FF to cell.
Checking read port `\main.arm.dp.rf.rf'[0] in module `\cpusys_goboard': no output FF found.
Checking read port `\main.arm.dp.rf.rf'[1] in module `\cpusys_goboard': no output FF found.
Checking read port `\main.dmem.RAM'[0] in module `\cpusys_goboard': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\main.imem.RAM'[0] in module `\cpusys_goboard': no output FF found.
Checking read port address `\main.arm.dp.rf.rf'[0] in module `\cpusys_goboard': no address FF found.
Checking read port address `\main.arm.dp.rf.rf'[1] in module `\cpusys_goboard': no address FF found.
Checking read port address `\main.imem.RAM'[0] in module `\cpusys_goboard': address FF has async set and/or reset, not supported.

18.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 3 unused cells and 25 unused wires.
<suppressed ~4 debug messages>

18.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory cpusys_goboard.main.arm.dp.rf.rf by address:

18.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

18.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

18.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory cpusys_goboard.$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558
using FF mapping for memory cpusys_goboard.$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558
using FF mapping for memory cpusys_goboard.main.arm.dp.rf.rf
mapping memory cpusys_goboard.main.dmem.RAM via $__ICE40_RAM4K_
using FF mapping for memory cpusys_goboard.main.imem.RAM
<suppressed ~162 debug messages>

18.25. Executing TECHMAP pass (map to technology primitives).

18.25.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

18.25.2. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

18.25.3. Continuing TECHMAP pass.
Using template $paramod$13b3947419e62b7bbba1b93c77e4155efbe69a94\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~26 debug messages>

18.26. Executing ICE40_BRAMINIT pass.

18.27. Executing OPT pass (performing simple optimizations).

18.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~34 debug messages>

18.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$mem.cc:1134:emulate_transparency$805 ($dffe) from module cpusys_goboard.
Adding EN signal on $flatten\main.\arm.\dp.\pcreg.$procdff$728 ($adff) from module cpusys_goboard (D = \main.arm.dp.pcreg.d [1:0], Q = \main.arm.dp.pcreg.q [1:0]).

18.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 5 unused cells and 29 unused wires.
<suppressed ~6 debug messages>

18.27.5. Rerunning OPT passes. (Removed registers in this run.)

18.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~1 debug messages>

18.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 6 on $auto$mem.cc:1612:emulate_read_first$802 ($dff) from module cpusys_goboard.
Setting constant 0-bit at position 7 on $auto$mem.cc:1612:emulate_read_first$802 ($dff) from module cpusys_goboard.

18.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

18.27.10. Rerunning OPT passes. (Removed registers in this run.)

18.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.27.13. Executing OPT_DFF pass (perform DFF optimizations).

18.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.27.15. Finished fast OPT passes.

18.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558 in module \cpusys_goboard:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of cpusys_goboard.$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558: $$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558 in module \cpusys_goboard:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of cpusys_goboard.$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558: $$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \main.arm.dp.rf.rf in module \cpusys_goboard:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory \main.imem.RAM in module \cpusys_goboard:
  created 65 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 127 $mux cells.
  write interface: 0 write mux blocks.

18.29. Executing OPT pass (performing simple optimizations).

18.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~221 debug messages>

18.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

18.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][0]$1380:
      Old ports: A=32'11100000010011110000000000001111, B=32'11100000010011110001000000001111, Y=$memory\main.imem.RAM$rdmux[0][5][0]$a$1285
      New ports: A=1'0, B=1'1, Y=$memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [12]
      New connections: { $memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [31:13] $memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [11:0] } = 31'1110000001001111000000000001111
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][3]$1389:
      Old ports: A=167772163, B=32'11100010100000110011000000000001, Y=$memory\main.imem.RAM$rdmux[0][5][1]$b$1289
      New ports: A=2'01, B=2'10, Y={ $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [1] }
      New connections: { $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [31:13] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [11:2] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [0] } = { $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] 1'0 $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [1] 3'010 $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] 5'00000 $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] 2'00 $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] 11'00000000001 }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][4]$1392:
      Old ports: A=32'11100101100000000011000000010100, B=32'11100000010100110001000000000010, Y=$memory\main.imem.RAM$rdmux[0][5][2]$a$1291
      New ports: A=2'10, B=2'01, Y=$memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2:1]
      New connections: { $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [31:3] $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [0] } = { 5'11100 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2] 1'0 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2] $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2:1] 1'0 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [1] 2'00 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [1] $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [1] 2'00 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2] 8'10000000 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][9]$1407:
      Old ports: A=32'11101010111111111111111111110111, B=32'x, Y=$memory\main.imem.RAM$rdmux[0][5][4]$b$1298
      New ports: A=2'01, B=2'x, Y={ $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [3] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [31:4] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [2:1] } = { $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [3] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [3] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [3] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][1]$1383:
      Old ports: A=32'11100000010011110010000000001111, B=32'11100000010011110011000000001111, Y=$memory\main.imem.RAM$rdmux[0][5][0]$b$1286
      New ports: A=1'0, B=1'1, Y=$memory\main.imem.RAM$rdmux[0][5][0]$b$1286 [12]
      New connections: { $memory\main.imem.RAM$rdmux[0][5][0]$b$1286 [31:13] $memory\main.imem.RAM$rdmux[0][5][0]$b$1286 [11:0] } = 31'1110000001001111001000000001111
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][5]$1395:
      Old ports: A=452984825, B=32'11100101100000000011000000000000, Y=$memory\main.imem.RAM$rdmux[0][5][2]$b$1292
      New ports: A=2'01, B=2'10, Y={ $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [31:25] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [23:1] } = { $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] 1'1 $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] 2'11 $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][6][2]$1386:
      Old ports: A=32'11100010100000110011000000000001, B=32'11100000010100110001000000000010, Y=$memory\main.imem.RAM$rdmux[0][5][1]$a$1288
      New ports: A=2'01, B=2'10, Y=$memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [1:0]
      New connections: $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [31:2] = { 6'111000 $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [0] 1'0 $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [0] $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [1] 1'0 $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [1] 6'001100 $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [0] 11'10000000000 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][6]$943:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923
      New ports: A=2'10, B=2'01, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923 [1:0]
      New connections: $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923 [6:2] = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923 [1:0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][5]$940:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [3] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [2:0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][4]$937:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$920
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$920 [2]
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$920 [6:3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$920 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][3]$934:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [4:1] } = { 2'11 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][2]$931:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [3] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [2:0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][1]$928:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [2] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [6:5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][0]$925:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1]
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [6:2] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1] 2'11 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][6]$898:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878
      New ports: A=2'10, B=2'01, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878 [1:0]
      New connections: $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878 [6:2] = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878 [1:0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][5]$895:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [3] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [2:0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][4]$892:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$875
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$875 [2]
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$875 [6:3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$875 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][3]$889:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [4:1] } = { 2'11 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][2]$886:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [3] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [2:0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][1]$883:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [2] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [6:5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][0]$880:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1]
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [6:2] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1] 2'11 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][7]$901:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$879
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$879 [3]
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$879 [6:4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$879 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][3][7]$946:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$924
      New ports: A=1'1, B=1'0, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$924 [3]
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$924 [6:4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$924 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $flatten\main.\arm.\c.\dec.$procmux$652:
      Old ports: A=10'1001110100, B=10'0001111000, Y=$flatten\main.\arm.\c.\dec.$3\controls[9:0]
      New ports: A=2'01, B=2'10, Y=$flatten\main.\arm.\c.\dec.$3\controls[9:0] [3:2]
      New connections: { $flatten\main.\arm.\c.\dec.$3\controls[9:0] [9:4] $flatten\main.\arm.\c.\dec.$3\controls[9:0] [1:0] } = { $flatten\main.\arm.\c.\dec.$3\controls[9:0] [2] 7'0011100 }
    Consolidated identical input bits for $mux cell $flatten\main.\arm.\c.\dec.$procmux$660:
      Old ports: A=6'001001, B=6'101001, Y=$auto$wreduce.cc:455:run$752 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$752 [5]
      New connections: $auto$wreduce.cc:455:run$752 [4:0] = 5'01001
    Consolidated identical input bits for $pmux cell $flatten\main.\arm.\dp.\ext.$procmux$617:
      Old ports: A={ 24'000000000000000000000000 \main.Instr [7:0] }, B={ 20'00000000000000000000 \main.Instr [11:0] \main.Instr [23] \main.Instr [23] \main.Instr [23] \main.Instr [23] \main.Instr [23] \main.Instr [23] \main.Instr [23:0] 2'00 }, Y=\main.arm.dp.srcbmux.d1
      New ports: A={ 18'000000000000000000 \main.Instr [7:0] }, B={ 14'00000000000000 \main.Instr [11:0] \main.Instr [23:0] 2'00 }, Y=\main.arm.dp.srcbmux.d1 [25:0]
      New connections: \main.arm.dp.srcbmux.d1 [31:26] = { \main.arm.dp.srcbmux.d1 [25] \main.arm.dp.srcbmux.d1 [25] \main.arm.dp.srcbmux.d1 [25] \main.arm.dp.srcbmux.d1 [25] \main.arm.dp.srcbmux.d1 [25] \main.arm.dp.srcbmux.d1 [25] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][5][4]$1296:
      Old ports: A=32'11101010111111111111111111110111, B=$memory\main.imem.RAM$rdmux[0][5][4]$b$1298, Y=$memory\main.imem.RAM$rdmux[0][4][2]$a$1243
      New ports: A=2'01, B={ $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [3] $memory\main.imem.RAM$rdmux[0][5][4]$b$1298 [0] }, Y={ $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [3] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [31:4] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [2:1] } = { $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [3] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [3] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [3] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][5][1]$1287:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][5][1]$a$1288, B=$memory\main.imem.RAM$rdmux[0][5][1]$b$1289, Y=$memory\main.imem.RAM$rdmux[0][4][0]$b$1238
      New ports: A={ 1'0 $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [1:0] 1'1 $memory\main.imem.RAM$rdmux[0][5][1]$a$1288 [1:0] }, B={ $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [1] 1'0 $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [12] $memory\main.imem.RAM$rdmux[0][5][1]$b$1289 [1] 1'1 }, Y={ $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [27] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [20] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [13:12] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [1:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [31:28] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [26:21] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [19:14] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [11:2] } = { $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [12] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [12] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [12] 2'00 $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [0] 1'0 $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [13] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [20] 3'000 $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [12] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [12] 12'000000000000 }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][5][0]$1284:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][5][0]$a$1285, B=$memory\main.imem.RAM$rdmux[0][5][0]$b$1286, Y=$memory\main.imem.RAM$rdmux[0][4][0]$a$1237
      New ports: A={ 1'0 $memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [12] }, B={ 1'1 $memory\main.imem.RAM$rdmux[0][5][0]$b$1286 [12] }, Y=$memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [13:12]
      New connections: { $memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [31:14] $memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [11:0] } = 30'111000000100111100000000001111
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$922:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$924, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912
      New ports: A={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923 [0] 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$923 [1:0] }, B={ 1'0 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$924 [3] 2'11 }, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912 [4:3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912 [1:0] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912 [6:5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912 [2] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$912 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$919:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$920, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911
      New ports: A={ 2'11 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$920 [2] }, B={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$921 [3] 1'1 }, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911 [3:2] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911 [6] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911 [1:0] } = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$911 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$916:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909
      New ports: A={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [3] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$917 [3] 2'01 }, B={ 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$918 [0] }, Y={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909 [6:5] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909 [3:2] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909 [0] }
      New connections: { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909 [4] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909 [1] } = { 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$909 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$913:
      Old ports: A=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914, B=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$908
      New ports: A={ 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1] $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$914 [1] 1'0 }, B={ $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [4] 1'1 $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$915 [2] 2'01 }, Y=$memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$908 [4:0]
      New connections: $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$908 [6:5] = { $memory$flatten\hexout2.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$908 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$877:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$879, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867
      New ports: A={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878 [0] 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$a$878 [1:0] }, B={ 1'0 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][3]$b$879 [3] 2'11 }, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867 [4:3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867 [1:0] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867 [6:5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867 [2] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$b$867 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$874:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$875, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866
      New ports: A={ 2'11 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$a$875 [2] }, B={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][2]$b$876 [3] 1'1 }, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866 [3:2] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866 [6] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866 [1:0] } = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][1]$a$866 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$871:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864
      New ports: A={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [3] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$a$872 [3] 2'01 }, B={ 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][1]$b$873 [0] }, Y={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864 [6:5] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864 [3:2] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864 [0] }
      New connections: { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864 [4] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864 [1] } = { 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$b$864 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$868:
      Old ports: A=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869, B=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$863
      New ports: A={ 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1] $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$a$869 [1] 1'0 }, B={ $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [4] 1'1 $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][2][0]$b$870 [2] 2'01 }, Y=$memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$863 [4:0]
      New connections: $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$863 [6:5] = { $memory$flatten\hexout1.$auto$proc_rom.cc:150:do_switch$558$rdmux[0][1][0]$a$863 [3] 1'1 }
    Consolidated identical input bits for $pmux cell $flatten\main.\arm.\c.\dec.$procmux$665:
      Old ports: A={ 4'0000 $auto$wreduce.cc:455:run$752 [5:0] }, B={ $flatten\main.\arm.\c.\dec.$3\controls[9:0] 10'0110100010 }, Y=\main.arm.c.dec.controls
      New ports: A={ $auto$wreduce.cc:455:run$752 [5] 5'01001 }, B={ 2'11 $flatten\main.\arm.\c.\dec.$3\controls[9:0] [3:2] 8'00100010 }, Y=\main.arm.c.dec.controls [5:0]
      New connections: \main.arm.c.dec.controls [9:6] = { \main.arm.c.dec.controls [2:1] \main.arm.c.dec.controls [1] \main.arm.c.dec.controls [4] }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][5][2]$1290:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][5][2]$a$1291, B=$memory\main.imem.RAM$rdmux[0][5][2]$b$1292, Y=$memory\main.imem.RAM$rdmux[0][4][1]$a$1240
      New ports: A={ 1'1 $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2:1] $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2] $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2] $memory\main.imem.RAM$rdmux[0][5][2]$a$1291 [2:1] 1'0 }, B={ $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [24] $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] 1'1 $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] 2'00 $memory\main.imem.RAM$rdmux[0][5][2]$b$1292 [0] }, Y={ $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [29] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [24] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [16] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [13] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [4] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [2:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [31:30] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [28:25] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [23:17] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [15:14] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [12:5] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [3] } = { $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [29] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [29] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [24] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [13] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [16] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [16] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [16] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] 1'1 $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][4][0]$1236:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][4][0]$a$1237, B=$memory\main.imem.RAM$rdmux[0][4][0]$b$1238, Y=$memory\main.imem.RAM$rdmux[0][3][0]$a$1213
      New ports: A={ 6'000101 $memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [13:12] 3'111 }, B={ $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [27] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [0] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [13] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [20] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [20] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [12] $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [13:12] 1'0 $memory\main.imem.RAM$rdmux[0][4][0]$b$1238 [1:0] }, Y={ $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [27] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [25] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [23:22] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [20] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [13:12] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [31:28] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [26] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [24] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [21] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [19:17] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [15:14] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [11:3] } = { $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] 4'0000 $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] 10'0000000000 $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2] }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][4][2]$1242:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][4][2]$a$1243, B=32'11101010111111111111111111110111, Y=$memory\main.imem.RAM$rdmux[0][3][1]$a$1216
      New ports: A={ $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [3] $memory\main.imem.RAM$rdmux[0][4][2]$a$1243 [0] }, B=2'01, Y={ $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [3] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [31:4] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [2:1] } = { $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [3] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [3] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [3] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][4][1]$1239:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][4][1]$a$1240, B=32'11101010111111111111111111110111, Y=$memory\main.imem.RAM$rdmux[0][3][0]$b$1214
      New ports: A={ $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [29] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [24] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [16] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [13] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [4] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [0] $memory\main.imem.RAM$rdmux[0][4][1]$a$1240 [2:0] }, B=9'101110111, Y={ $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [29] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [24] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [13] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [4:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [31:30] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [28:25] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [23:17] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [15:14] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [12:5] } = { $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [29] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [29] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [3] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [24] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [13] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] 1'1 $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][3][1]$1215:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][3][1]$a$1216, B=32'x, Y=$memory\main.imem.RAM$rdmux[0][2][0]$b$1202
      New ports: A={ $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [3] $memory\main.imem.RAM$rdmux[0][3][1]$a$1216 [0] }, B=2'x, Y={ $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [31:4] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [2:1] } = { $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] }
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][3][0]$1212:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][3][0]$a$1213, B=$memory\main.imem.RAM$rdmux[0][3][0]$b$1214, Y=$memory\main.imem.RAM$rdmux[0][2][0]$a$1201
      New ports: A={ $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] 1'0 $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [27] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [25] 1'0 $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [23:22] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [20] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [16] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [13:12] 2'00 $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2] $memory\main.imem.RAM$rdmux[0][3][0]$a$1213 [2:0] }, B={ $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [29] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [3] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [24] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [13] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [16] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [13] 1'1 $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [0] $memory\main.imem.RAM$rdmux[0][3][0]$b$1214 [4:0] }, Y={ $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [29:27] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [25:22] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [20] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [18] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [16] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [13:12] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [31:30] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [26] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [21] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [19] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [17] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [15:14] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [11:6] } = { $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [29] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [29] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [24] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [18] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [16] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][2][0]$1200:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][2][0]$a$1201, B=$memory\main.imem.RAM$rdmux[0][2][0]$b$1202, Y=$memory\main.imem.RAM$rdmux[0][1][0]$a$1195
      New ports: A={ $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [29:27] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [25:22] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [20] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [18] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [16] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [13:12] $memory\main.imem.RAM$rdmux[0][2][0]$a$1201 [5:0] }, B={ $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [3] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] $memory\main.imem.RAM$rdmux[0][2][0]$b$1202 [0] }, Y={ $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [29:27] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [25:22] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [20] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [18] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [16] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [13:12] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [31:30] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [26] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [21] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [19] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [17] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [15:14] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [11:6] } = { $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [29] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [29] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [24] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [18] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [16] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][1][0]$1194:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][1][0]$a$1195, B=32'x, Y=$memory\main.imem.RAM$rdmux[0][0][0]$a$1192
      New ports: A={ $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [29:27] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [25:22] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [20] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [18] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [16] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [13:12] $memory\main.imem.RAM$rdmux[0][1][0]$a$1195 [5:0] }, B=18'x, Y={ $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [29:27] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [25:22] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [20] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [18] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [16] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [13:12] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5:0] }
      New connections: { $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [31:30] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [26] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [21] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [19] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [17] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [15:14] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [11:6] } = { $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [29] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [29] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [24] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [18] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [16] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][0][0]$1191:
      Old ports: A=$memory\main.imem.RAM$rdmux[0][0][0]$a$1192, B=32'x, Y=\main.Instr
      New ports: A={ $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [29:27] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [25:22] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [20] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [18] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [16] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [13:12] $memory\main.imem.RAM$rdmux[0][0][0]$a$1192 [5:0] }, B=18'x, Y={ \main.Instr [29:27] \main.Instr [25:22] \main.Instr [20] \main.Instr [18] \main.Instr [16] \main.Instr [13:12] \main.Instr [5:0] }
      New connections: { \main.Instr [31:30] \main.Instr [26] \main.Instr [21] \main.Instr [19] \main.Instr [17] \main.Instr [15:14] \main.Instr [11:6] } = { \main.Instr [29] \main.Instr [29] \main.Instr [24] \main.Instr [5] \main.Instr [18] \main.Instr [16] \main.Instr [5] \main.Instr [5] \main.Instr [5] \main.Instr [5] \main.Instr [5] \main.Instr [5] \main.Instr [5] \main.Instr [5] }
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $pmux cell $flatten\main.\arm.\dp.\ext.$procmux$617:
      Old ports: A={ 18'000000000000000000 \main.Instr [7:0] }, B={ 14'00000000000000 \main.Instr [11:0] \main.Instr [23:0] 2'00 }, Y=\main.arm.dp.srcbmux.d1 [25:0]
      New ports: A={ 9'000000000 \main.Instr [5] \main.Instr [5:0] }, B={ 8'00000000 \main.Instr [5] \main.Instr [5] \main.Instr [5:0] \main.Instr [23:22] \main.Instr [20] \main.Instr [18] \main.Instr [16] \main.Instr [13:12] \main.Instr [5] \main.Instr [5:0] 2'00 }, Y={ \main.arm.dp.srcbmux.d1 [25:24] \main.arm.dp.srcbmux.d1 [22] \main.arm.dp.srcbmux.d1 [20] \main.arm.dp.srcbmux.d1 [18] \main.arm.dp.srcbmux.d1 [15:14] \main.arm.dp.srcbmux.d1 [12] \main.arm.dp.srcbmux.d1 [8] \main.arm.dp.srcbmux.d1 [6:0] }
      New connections: { \main.arm.dp.srcbmux.d1 [23] \main.arm.dp.srcbmux.d1 [21] \main.arm.dp.srcbmux.d1 [19] \main.arm.dp.srcbmux.d1 [17:16] \main.arm.dp.srcbmux.d1 [13] \main.arm.dp.srcbmux.d1 [11:9] \main.arm.dp.srcbmux.d1 [7] } = { \main.arm.dp.srcbmux.d1 [12] \main.arm.dp.srcbmux.d1 [20] \main.arm.dp.srcbmux.d1 [18] \main.arm.dp.srcbmux.d1 [12] \main.arm.dp.srcbmux.d1 [12] \main.arm.dp.srcbmux.d1 [12] \main.arm.dp.srcbmux.d1 [8] \main.arm.dp.srcbmux.d1 [8] \main.arm.dp.srcbmux.d1 [8] \main.Instr [5] }
    Consolidated identical input bits for $mux cell $flatten\main.\arm.\dp.\ra1mux.$ternary$../rtl/mux2.sv:5$553:
      Old ports: A=\main.Instr [19:16], B=4'1111, Y=\main.arm.dp.rf.ra1
      New ports: A={ \main.Instr [18] \main.Instr [16] }, B=2'11, Y={ \main.arm.dp.rf.ra1 [2] \main.arm.dp.rf.ra1 [0] }
      New connections: { \main.arm.dp.rf.ra1 [3] \main.arm.dp.rf.ra1 [1] } = { \main.arm.dp.rf.ra1 [2] \main.arm.dp.rf.ra1 [0] }
  Optimizing cells in module \cpusys_goboard.
Performed a total of 49 changes.

18.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

18.29.6. Executing OPT_DFF pass (perform DFF optimizations).

18.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 342 unused wires.
<suppressed ~1 debug messages>

18.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~35 debug messages>

18.29.9. Rerunning OPT passes. (Maybe there is more to do..)

18.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 3/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 4/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 5/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 6/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 7/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 8/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 9/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 10/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 11/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 12/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 13/15 on $pmux $flatten\main.\arm.\c.\cl.\cc.$procmux$670.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][1][0]$1027.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][1][1]$1030.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][2][1]$1036.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][2][1]$1036.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][2][2]$1039.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][2][2]$1039.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][0]$1045.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][1]$1048.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][2]$1051.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][2]$1051.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][3]$1054.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][3]$1054.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][4]$1057.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][4]$1057.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][5]$1060.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][5]$1060.
    dead port 1/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][6]$1063.
    dead port 2/2 on $mux $memory\main.arm.dp.rf.rf$rdmux[1][3][7]$1066.
Removed 30 multiplexer ports.
<suppressed ~32 debug messages>

18.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
    Consolidated identical input bits for $mux cell $memory\main.imem.RAM$rdmux[0][5][0]$1284:
      Old ports: A={ 1'0 $memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [12] }, B={ 1'1 $memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [12] }, Y=$memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [13:12]
      New ports: A=1'0, B=1'1, Y=$memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [13]
      New connections: $memory\main.imem.RAM$rdmux[0][4][0]$a$1237 [12] = $memory\main.imem.RAM$rdmux[0][5][0]$a$1285 [12]
  Optimizing cells in module \cpusys_goboard.
Performed a total of 1 changes.

18.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\main.arm.dp.rf.rf[3]$955 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[3]).
Adding EN signal on $memory\main.arm.dp.rf.rf[2]$953 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[2]).
Adding EN signal on $memory\main.arm.dp.rf.rf[1]$951 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[1]).
Adding EN signal on $memory\main.arm.dp.rf.rf[14]$977 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[14]).
Adding EN signal on $memory\main.arm.dp.rf.rf[13]$975 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[13]).
Adding EN signal on $memory\main.arm.dp.rf.rf[12]$973 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[12]).
Adding EN signal on $memory\main.arm.dp.rf.rf[0]$949 ($dff) from module cpusys_goboard (D = \main.arm.dp.pcmux.d1, Q = \main.arm.dp.rf.rf[0]).

18.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 17 unused cells and 60 unused wires.
<suppressed ~19 debug messages>

18.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~1 debug messages>

18.29.16. Rerunning OPT passes. (Maybe there is more to do..)

18.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

18.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $memory\main.arm.dp.rf.rf[9]$967 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[8]$965 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[7]$963 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[6]$961 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[5]$959 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[4]$957 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[11]$971 ($dff) from module cpusys_goboard (removing D path).
Handling D = Q on $memory\main.arm.dp.rf.rf[10]$969 ($dff) from module cpusys_goboard (removing D path).

18.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~6 debug messages>

18.29.23. Rerunning OPT passes. (Maybe there is more to do..)

18.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

18.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.29.27. Executing OPT_DFF pass (perform DFF optimizations).

18.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

18.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.29.30. Rerunning OPT passes. (Maybe there is more to do..)

18.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpusys_goboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

18.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpusys_goboard.
Performed a total of 0 changes.

18.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.29.34. Executing OPT_DFF pass (perform DFF optimizations).

18.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.29.37. Finished OPT passes. (There is nothing left to do.)

18.30. Executing ICE40_WRAPCARRY pass (wrap carries).

18.31. Executing TECHMAP pass (map to technology primitives).

18.31.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.31.2. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

18.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eqx.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$857150d3a9b7fb38b73bbaa31ff652415e553f98\_80_ice40_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$0d149ffe75563ef6fcc1a3dddc59d00af28651a7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~461 debug messages>

18.32. Executing OPT pass (performing simple optimizations).

18.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~391 debug messages>

18.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~201 debug messages>
Removed a total of 67 cells.

18.32.3. Executing OPT_DFF pass (perform DFF optimizations).

18.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 155 unused cells and 354 unused wires.
<suppressed ~157 debug messages>

18.32.5. Finished fast OPT passes.

18.33. Executing ICE40_OPT pass (performing simple optimizations).

18.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$alumacc.cc:485:replace_alu$755.slice[0].carry: CO=\slow_clk [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$alumacc.cc:485:replace_alu$758.slice[0].carry: CO=\main.arm.dp.pcadd2.a [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$alumacc.cc:485:replace_alu$761.slice[32].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) cpusys_goboard.$auto$alumacc.cc:485:replace_alu$764.slice[0].carry: CO=\main.arm.dp.pcreg.q [2]

18.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~181 debug messages>

18.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.33.4. Executing OPT_DFF pass (perform DFF optimizations).

18.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 1 unused cells and 13 unused wires.
<suppressed ~2 debug messages>

18.33.6. Rerunning OPT passes. (Removed registers in this run.)

18.33.7. Running ICE40 specific optimizations.

18.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~1 debug messages>

18.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.33.10. Executing OPT_DFF pass (perform DFF optimizations).

18.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.33.12. Rerunning OPT passes. (Removed registers in this run.)

18.33.13. Running ICE40 specific optimizations.

18.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.33.16. Executing OPT_DFF pass (perform DFF optimizations).

18.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.33.18. Finished OPT passes. (There is nothing left to do.)

18.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

18.35. Executing TECHMAP pass (map to technology primitives).

18.35.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

18.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
No more expansions possible.
<suppressed ~349 debug messages>

18.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping cpusys_goboard.$auto$alumacc.cc:485:replace_alu$758.slice[0].carry ($lut).
Mapping cpusys_goboard.$auto$alumacc.cc:485:replace_alu$764.slice[0].carry ($lut).
Mapping cpusys_goboard.$auto$alumacc.cc:485:replace_alu$755.slice[0].carry ($lut).

18.38. Executing ICE40_OPT pass (performing simple optimizations).

18.38.1. Running ICE40 specific optimizations.

18.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.
<suppressed ~102 debug messages>

18.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

18.38.4. Executing OPT_DFF pass (perform DFF optimizations).

18.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..
Removed 0 unused cells and 1610 unused wires.
<suppressed ~1 debug messages>

18.38.6. Rerunning OPT passes. (Removed registers in this run.)

18.38.7. Running ICE40 specific optimizations.

18.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpusys_goboard.

18.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpusys_goboard'.
Removed a total of 0 cells.

18.38.10. Executing OPT_DFF pass (perform DFF optimizations).

18.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpusys_goboard..

18.38.12. Finished OPT passes. (There is nothing left to do.)

18.39. Executing TECHMAP pass (map to technology primitives).

18.39.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

18.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18.40. Executing ABC pass (technology mapping using ABC).

18.40.1. Extracting gate netlist of module `\cpusys_goboard' to `<abc-temp-dir>/input.blif'..
Extracted 1049 gates and 1441 wires to a netlist network with 390 inputs and 187 outputs.

18.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     260.
ABC: Participating nodes from both networks       =     612.
ABC: Participating nodes from the first network   =     262. (  81.37 % of nodes)
ABC: Participating nodes from the second network  =     350. ( 108.70 % of nodes)
ABC: Node pairs (any polarity)                    =     261. (  81.06 % of names can be moved)
ABC: Node pairs (same polarity)                   =     230. (  71.43 % of names can be moved)
ABC: Total runtime =     0.03 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

18.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      318
ABC RESULTS:        internal signals:      864
ABC RESULTS:           input signals:      390
ABC RESULTS:          output signals:      187
Removing temp directory.

18.41. Executing ICE40_WRAPCARRY pass (wrap carries).

18.42. Executing TECHMAP pass (map to technology primitives).

18.42.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

18.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 116 unused cells and 735 unused wires.

18.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      421
  1-LUT               18
  2-LUT               63
  3-LUT              252
  4-LUT               88
  with \SB_CARRY    (#0)  105
  with \SB_CARRY    (#1)  105

Eliminating LUTs.
Number of LUTs:      421
  1-LUT               18
  2-LUT               63
  3-LUT              252
  4-LUT               88
  with \SB_CARRY    (#0)  105
  with \SB_CARRY    (#1)  105

Combining LUTs.
Number of LUTs:      420
  1-LUT               18
  2-LUT               62
  3-LUT              251
  4-LUT               89
  with \SB_CARRY    (#0)  105
  with \SB_CARRY    (#1)  105

Eliminated 0 LUTs.
Combined 1 LUTs.
<suppressed ~1859 debug messages>

18.44. Executing TECHMAP pass (map to technology primitives).

18.44.1. Executing Verilog-2005 frontend: /Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/nick/.bin/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

18.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$fc2be7cf2aa1cfc8ebe963e124f1c70016e3f0fb\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101100 for cells of type $lut.
Using template $paramod$162eacaa56f6f80a5a27551a5f2071c174364807\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$1f3b67373a23476b64a6ed61bde9dbe9df1086de\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$1661fd1d8cfb54ddeba09cd7df814e0fd3aae40f\$lut for cells of type $lut.
Using template $paramod$12876a77a23933587641472d85bdc8e7478ad1c0\$lut for cells of type $lut.
Using template $paramod$4b4b0d164889d1f0429c06b8785349a50e11c667\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$e08f64f6355a7bb088e0780f8b30388809a413f7\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$54950a3f3469fd7f74132771f3809ee16e9ca6e7\$lut for cells of type $lut.
Using template $paramod$eb95d6a58038b5eb68f87b4f604db414879e7bb1\$lut for cells of type $lut.
Using template $paramod$60706ec56213e162b2b50cb37832db0ce0a86ab7\$lut for cells of type $lut.
Using template $paramod$f9333290b738a242cb30b0de8879c5396e3e6451\$lut for cells of type $lut.
Using template $paramod$197077b00c11589fe99760d60a3c06cb8ac7c1e0\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1073 debug messages>
Removed 0 unused cells and 883 unused wires.

18.45. Executing AUTONAME pass.
Renamed 5595 objects in module cpusys_goboard (30 iterations).
<suppressed ~873 debug messages>

18.46. Executing HIERARCHY pass (managing design hierarchy).

18.46.1. Analyzing design hierarchy..
Top module:  \cpusys_goboard

18.46.2. Analyzing design hierarchy..
Top module:  \cpusys_goboard
Removed 0 unused modules.

18.47. Printing statistics.

=== cpusys_goboard ===

   Number of wires:                322
   Number of wire bits:           2913
   Number of public wires:         322
   Number of public wire bits:    2913
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                741
     SB_CARRY                      105
     SB_DFF                         41
     SB_DFFE                       120
     SB_DFFER                        3
     SB_DFFR                        30
     SB_DFFSR                       21
     SB_LUT4                       420
     SB_RAM40_4K                     1

18.48. Executing CHECK pass (checking for obvious problems).
Checking module cpusys_goboard...
Found and reported 0 problems.

18.49. Executing JSON backend.

End of script. Logfile hash: 216ff0596e, CPU: user 1.51s system 0.02s
Yosys 0.19+36 (git sha1 30a4218f5, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 25% 7x techmap (0 sec), 22% 29x read_verilog (0 sec), ...
